{"version":3,"sources":["components/timepicker.js","components/checkboxs.js","components/infoCards.js","components/simplePaper.js","loginCookies.js","AuditForm/AuditForm.js","LoginPage/api.js","LoginPage/LoginPage.js","ChangePassword/ChangePassword.js","App.js","index.js"],"names":["DatePickers","props","console","log","selectedDate","MuiPickersUtilsProvider","utils","DateFnsUtils","Grid","container","justifyContent","id","label","format","value","onChange","onDateChange","KeyboardButtonProps","error","formValidation","DateOfCount","helperText","selectedTime","onTimeChange","TimeOfCount","CheckboxLabels","votingArray","String","list","split","FormGroup","row","FormControlLabel","control","Checkbox","checked","includes","onCheckBoxChange","name","color","useStyles","makeStyles","root","minWidth","margin","padding","textAlign","align","minHeight","height","title","fontSize","pos","SimpleCard","classes","Card","className","variant","CardContent","Typography","cardName","CardValue","theme","width","marginTop","text","hasCookiesExpired","undefined","Cookies","get","cookieIntervalId","clearCookiesInterval","clearInterval","setLoginCookies","userData","set","JSON","stringify","expires","AuditForm","history","useHistory","setInterval","window","confirm","parse","replace","useLoginCookiesTimer","React","useState","CountyId","SampleID","ElectionDate","CountyName","ContestName","TypeOfSample","PrecinctSiteName","CandidateName1","CandidateName2","sampleDetail","setSampleDetail","showExplanation","setShowExplanation","VotingEquipmentUsed","TotalTime","CostOfCount","PeoplePartyCounting","HumanOrMachineError","DifferenceExplanation","CandidatesCounts","setFormValidation","candidateData","setCandidateData","formInfoSubmitted","setFormInfoSubmitted","label1","label2","label1Color","label2Color","setLabel","getdataByCountyandsample","countyId","sampleId","a","axios","response","data","dateOfCount","slice","Number","VotingArray","SampleId","toString","getCandidateByCountyandsample","updateCandidate","newData","canId","putbody","put","updateData","objIndex","findIndex","obj","SampleCandidateId","CandidateName","Machine","parseInt","HandToEye","DifferenceInCount","Math","abs","updateSample","tableIcons","Edit","forwardRef","ref","Clear","Check","useEffect","hasDifference","map","some","item","countyID","formControl","spacing","selectEmpty","outerColumn","borderRight","borderBottom","borderLeft","bigTitle","fontWeight","marginBottom","paddingTop","paddingLeft","textBox","formBox","border","entireForm","paddingRight","paddingBottom","cost","costInput","textField","marginLeft","marginRight","alertDialog","setAlertDialog","handleClose","onClick","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","date","Date","now","renderer","seconds","onComplete","DialogActions","Button","autoFocus","RadioGroup","aria-label","e","target","Box","borderColor","borderRadius","component","m","p","pr","pl","Radio","style","alignItems","xs","substring","time","NewTime","toLocaleString","timeZone","FormControl","FormLabel","event","updatedList","push","filter","FormHelperText","TextField","InputProps","startAdornment","InputAdornment","position","inputProps","min","max","type","field","editable","search","paging","sorting","actionsColumnIndex","onRowUpdate","oldData","Promise","resolve","reject","then","Container","Collapse","in","timeout","Fade","noValidate","autoComplete","multiline","rows","defaultValue","newFormValidation","length","HandToEyeIsZero","MachineIsZero","objs","trueCount","key","labeltochange","catch","alert","disabled","authenticateUser","email","password","Copyright","Link","href","getFullYear","paper","display","flexDirection","avatar","backgroundColor","palette","secondary","main","form","submit","modal","paper2","background","boxShadow","shadows","LoginPage","setEmail","setPassword","setOpen","handleLogin","IsDefault","onUserAuthenticated","maxWidth","CssBaseline","Avatar","Validate","required","fullWidth","Modal","BackdropComponent","Backdrop","BackdropProps","mt","updatePassword","webUserId","ChargePassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","setWebUserId","WebUserId","App","userDataCookies","initUserData","setUserData","handleUserAuthenticated","to","remove","download","exact","path","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uoBAiBe,SAASA,EAAYC,GAgBhC,OAZFC,QAAQC,IAAI,SAAUF,EAAMG,cAaxB,kBAACC,EAAA,EAAD,CAAyBC,MAAOC,WAC9B,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,gBAC/B,kBAAC,IAAD,CAEEC,GAAG,qBACHC,MAAM,uBACNC,OAAO,aACPC,MAAOb,EAAMG,aACbW,SAAUd,EAAMe,aAChBC,oBAAqB,CACnB,aAAc,eAEhBC,MAAQjB,EAAMkB,eAAeC,YAC7BC,WAAepB,EAAMkB,eAAeC,YAAa,WAAW,KAE9D,kBAAC,IAAD,CAEET,GAAG,cACHC,MAAM,uBACNE,MAAOb,EAAMqB,aACbP,SAAUd,EAAMsB,aAChBN,oBAAqB,CACnB,aAAc,eAEhBC,MAAQjB,EAAMkB,eAAeK,YAC7BH,WAAepB,EAAMkB,eAAeK,YAAa,WAAW,O,sBCrDvD,SAASC,GAAexB,GA+BvC,IAAMyB,EAAcC,OAAO1B,EAAM2B,MAAMC,MAAM,KAE3C,OACE,kBAACC,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACC,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CAEEC,QAAST,EAAYU,SAAS,kBAC9BrB,SAAUd,EAAMoC,iBAChBC,KAAK,iBACLC,MAAM,YAIV3B,MAAM,mBAEV,kBAACoB,EAAA,EAAD,CACIC,QACE,kBAACC,EAAA,EAAD,CACEC,QAAST,EAAYU,SAAS,mBAC9BrB,SAAUd,EAAMoC,iBAChBC,KAAK,kBACLC,MAAM,YAIV3B,MAAM,oBAGV,kBAACoB,EAAA,EAAD,CACIC,QACE,kBAACC,EAAA,EAAD,CACEC,QAAST,EAAYU,SAAS,0BAC9BrB,SAAUd,EAAMoC,iBAChBC,KAAK,yBACLC,MAAM,YAIV3B,MAAM,2BAGV,kBAACoB,EAAA,EAAD,CACIC,QACE,kBAACC,EAAA,EAAD,CACEC,QAAST,EAAYU,SAAS,4BAC9BrB,SAAUd,EAAMoC,iBAChBC,KAAK,2BACLC,MAAM,YAIV3B,MAAM,6BAGV,kBAACoB,EAAA,EAAD,CACIC,QACE,kBAACC,EAAA,EAAD,CACAC,QAAST,EAAYU,SAAS,kCAC5BrB,SAAUd,EAAMoC,iBAChBC,KAAK,iCACLC,MAAM,YAIV3B,MAAM,oC,wBC/FR4B,GAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,GACVC,OAAQ,EACRC,QAAQ,EACRC,UAAW,SACXC,MAAO,SACPC,UAAW,EACXC,OAAQ,QAIVC,MAAO,CACLC,SAAU,GACVP,OAAQ,EACRC,QAAQ,GAEVO,IAAK,CACHR,OAAQ,EACRC,QAAQ,KAIG,SAASQ,GAAWpD,GACjC,IAAMqD,EAAUd,KAEhB,OACE,kBAACe,GAAA,EAAD,CAAMC,UAAWF,EAAQZ,KAAMe,QAAQ,YACrC,kBAACC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYH,UAAWF,EAAQJ,OAC5BjD,EAAM2D,UAGT,kBAACD,EAAA,EAAD,CAAYH,UAAWF,EAAQF,IAAKb,MAAM,iBACvCtC,EAAM4D,WAAa,Q,OCpCZpB,aAAW,SAACqB,GAAD,MAAY,CACvCpB,KAAM,CAEJqB,MAAO,QAETb,MAAM,CACJC,SAAU,GACVP,OAAQ,EACRoB,UAAU,GACVnB,QAAQ,EACRC,UAAW,UAGbmB,KAAK,CACHrB,OAAQ,Q,yBCjBNsB,GAAmB,uBAAiCC,IAA5BC,KAAQC,IAAI,aAEtCC,GAAmB,KAEvB,SAASC,KACkB,OAArBD,KACFE,cAAcF,IACdA,GAAmB,MAwBhB,SAASG,GAAgBC,GAG9BN,KAAQO,IAAI,WAAYC,KAAKC,UAAUH,GAAW,CAC9CI,QAFgB,EAAE,KCWxB,IAs8BeC,GAt8BG,SAAC9E,GAAW,IAAD,GDjCtB,WACLC,QAAQC,IAAI,oBACZ,IAAM6E,EAAUC,cAChBV,KAEAD,GAAmBY,aAAY,YAC7BhF,QAAQC,IAAI,QAAS+D,MACjBA,QACEiB,OAAOC,QAAQ,6DAGjBX,GADiBG,KAAKS,MAAMjB,KAAQO,IAAI,eAGxCJ,KACAS,EAAQM,QAAQ,cAGnB,KCkBHC,GAEA,IAsBA,EAAwCC,IAAMC,SAAN,eAtBd,CACxBC,SAAU,GACVC,SAAU,GACVC,aAAc,GACdC,WAAY,GACZC,YAAa,GACbC,aAAc,GACdC,iBAAkB,GAClBC,eAAgB,GAChBC,eAAgB,MAalB,mBAAOC,EAAP,KAAqBC,EAArB,KAIA,EAA8CX,oBAAS,GAAvD,mBAAOY,EAAP,KAAwBC,EAAxB,KAGA,EAA4Cb,mBAAS,CACnDrE,aAAa,EACbI,aAAa,EACb+E,qBAAqB,EACrBC,WAAW,EACXC,aAAa,EACbC,qBAAqB,EACrBC,qBAAqB,EACrBC,uBAAuB,EACvBC,kBAAkB,IATpB,mBAAO1F,EAAP,KAAuB2F,EAAvB,KAeA,EAAgDrB,mBAAS,IAAzD,mBAEA,GAFA,UAE0CA,mBAAS,KAAnD,mBAAOsB,GAAP,KAAsBC,GAAtB,KAGA,GAAkDvB,oBAAS,GAA3D,qBAAOwB,GAAP,MAA0BC,GAA1B,MAEA,GAAkDzB,mBAAS,UAA3D,qBAEA,IAFA,YAE0BA,mBAAS,CACjC0B,OAAQ,GACRC,OAAQ,QACRC,YAAa,eACbC,YAAa,kBAJf,qBAAO1G,GAAP,MAAc2G,GAAd,MAUMC,GAAwB,uCAAG,WAAOC,EAAUC,GAAjB,2BAAAC,EAAA,sEACRC,IAAMvD,IAAN,sEAC0CoD,EAD1C,YACsDC,IAF9C,cACzBG,EADyB,gBAIdA,EAASC,KAJK,OAI3BA,EAJ2B,OAK/B5H,QAAQC,IAAI,cAAe2H,GAG3BC,GADIA,EAAcpG,OAAOmG,EAAK1G,cACJ4G,MAAM,GAAG,GAGnCxG,GADIA,EAAcG,OAAOmG,EAAKtG,cACJwG,MAAM,GAAG,GAG7BvB,EAAcwB,OAAOH,EAAKrB,aAC1BD,EAAYyB,OAAOH,EAAKtB,WACxB0B,EAAcJ,EAAKvB,oBAAoB1E,MAAM,KACnDuE,EAAgB,2BACXD,GADU,IAEbT,SAAU+B,EACV9B,SAAUmC,EAAKK,SAASC,WACxBxC,aAAckC,EAAKlC,aACnBG,aAAc+B,EAAK/B,aACnBC,iBAAkB8B,EAAK9B,iBACvBF,YAAagC,EAAKhC,YAClBD,WAAYiC,EAAKjC,WACjBzE,YAAa2G,EACbvG,YAAaA,EACb+E,oBAAqB2B,EACrBvB,oBAAqBmB,EAAKnB,oBAC1BC,sBAAuBkB,EAAKlB,sBAC5BF,oBAAqBoB,EAAKpB,oBAC1BF,UAAWA,EACXC,YAAaA,KAjCgB,4CAAH,wDA8CxB4B,GAA6B,uCAAG,WAAOZ,EAAUC,GAAjB,iBAAAC,EAAA,+EAEXC,IAAMvD,IAAN,yEAA4EoD,EAA5E,YAAwFC,IAF7E,cAE5BG,EAF4B,gBAGjBA,EAASC,KAHQ,OAG9BA,EAH8B,OAIlCd,GAAiBc,GAJiB,kDAMlC5H,QAAQgB,MAAR,MANkC,0DAAH,wDAW7BoH,GAAe,uCAAG,WAAOC,EAASC,EAAOC,GAAvB,iBAAAd,EAAA,6DACtBzH,QAAQC,IAAI,UAAWsI,GACvBvI,QAAQC,IAAI,QAASqI,GAFC,SAGJZ,IAAMc,IAAN,oDAA+DD,GAH3D,cAMlBE,EANkB,YAMD5B,IACrB7G,QAAQC,IAAI,aAAcwI,GAC1BzI,QAAQC,IAAI,UAAWoI,GACnBK,EAAWD,EAAWE,WAAW,SAAAC,GAAG,OAAIA,EAAIC,mBAAqBR,EAAQQ,qBAC7EJ,EAAWC,GAAUI,cAAgBT,EAAQS,cAC7CL,EAAWC,GAAUK,QAAUC,SAASX,EAAQU,SAChDN,EAAWC,GAAUO,UAAYD,SAASX,EAAQY,WAClDR,EAAWC,GAAUQ,kBAAoBC,KAAKC,IAAIJ,SAASX,EAAQU,SAAWC,SAASX,EAAQY,YAC/FnC,GAAiB2B,GACjBzI,QAAQC,IAAI,wBAAyBwI,GAff,4CAAH,0DAmBfY,GAAY,uCAAG,WAAO7D,EAAUC,EAAU8C,GAA3B,SAAAd,EAAA,sEAEDC,IAAMc,IAAN,iDAA4DD,GAF3D,yDAAH,0DAgIdvF,GAAQ,mDAyBNsG,GAAa,CACjBC,KAAMC,sBAAW,SAACzJ,EAAO0J,GAAR,OAAgB,kBAAC,IAAD,iBAAU1J,EAAV,CAAiB0J,IAAKA,QACvDC,MAAOF,sBAAW,SAACzJ,EAAO0J,GAAR,OAAgB,kBAAC,IAAD,iBAAW1J,EAAX,CAAkB0J,IAAKA,QACzDE,MAAOH,sBAAW,SAACzJ,EAAY0J,GAAb,OAA0B,kBAAC,IAAD,iBAAW1J,EAAX,CAAkB0J,IAAKA,SAwGrEnE,IAAMsE,WAAU,WACd,IACIC,EADiBhD,GAAciD,KAAI,SAAArC,GAAC,OAAIA,EAAEyB,qBACXa,MAAK,SAAAC,GAAI,OAAa,IAATA,KAGhC5D,IAAhByD,GAGA7J,QAAQC,IAAI,kBAAmBkG,GAC/BnG,QAAQC,IAAI,iBAAkB4G,MAE7B,CAACA,KAIJvB,IAAMsE,WAAU,WAEd5J,QAAQC,IAAIF,EAAMyE,SAASgB,UAC3B,IAAIyE,EAAWlK,EAAMyE,SAASgB,SAE9B8B,GAAyB2C,EADV,GAEf9B,GAA8B8B,EAFf,GAGfjK,QAAQC,IAAIgG,EAAauB,YAExB,IAOH,IA2FMpE,GA3FYb,aAAW,SAACqB,GAAD,MAAY,CACvCsG,YAAa,CACXxH,OAAQkB,EAAMuG,QAAQ,GACtB1H,SAAU,KAEZ2H,YAAa,CACXtG,UAAWF,EAAMuG,QAAQ,IAE3BE,YAAa,CACXC,YAAa,iBACbC,aAAc,iBACdC,WAAY,kBAEdC,SAAU,CACR7H,UAAW,SACXK,SAAU,GACVZ,MAAO,OACPqI,WAAY,IACZhI,OAAQ,EACRC,QAAS,GAEXK,MAAO,CACLJ,UAAW,SACXK,SAAU,GACVZ,MAAO,OACPqI,WAAY,IACZhI,OAAQ,EACRiI,aAAc,EACdhI,QAAS,GAEX3B,MAAO,CACL4B,UAAW,SACXK,SAAU,GACVZ,MAAO,MACPqI,WAAY,IACZhI,OAAQ,EACRiI,aAAc,EACdhI,QAAS,GAEXoB,KAAM,CAEJd,SAAU,GACVZ,MAAO,OACPqI,WAAY,IAGZE,WAAY,GACZC,YAAa,IAEfC,QAAS,CACPF,WAAY,EACZ,uBAAwB,CACtBlI,OAAQkB,EAAMuG,QAAQ,GACtBtG,MAAO,SAIXkH,QAAS,CACPC,OAAQ,kBAIVC,WAAY,CACVL,WAAY,GACZC,YAAa,MACbK,aAAc,MACdC,cAAe,IAEjB9E,oBAAqB,CACnBwE,YAAa,IAGfO,KAAM,CACJzI,QAAS,IAIX0I,UAAW,CACTR,YAAa,IAGfS,UAAW,CACTC,WAAY3H,EAAMuG,QAAQ,GAC1BqB,YAAa5H,EAAMuG,QAAQ,GAC3BtG,MAAO,IACP,MAAO,CACLxB,MAAO,WAKGC,GAehB,GAAsCiD,oBAAS,GAA/C,qBAAOkG,GAAP,MAAoBC,GAApB,MAMMC,GAAc,WAClBD,IAAe,IA+BjB,OAIE,kBAACpL,EAAA,EAAD,CAAMC,WAAS,EAAC+C,UAAWF,GAAQ6H,WAAYd,QAAS,GAGtD,kBAAC7J,EAAA,EAAD,CAAMC,WAAS,EAACyJ,MAAI,EAACxJ,eAAe,UACjCwC,GAED,4BAAQ4I,QA9CU,WACtBF,IAAe,KA6CX,UAEA,4BAAQE,QAnBQ,WACpB5L,QAAQC,IAAI,eAAgBgG,GAC5BjG,QAAQC,IAAI,gBAAiB4G,MAiBzB,WAOA,kBAACgF,EAAA,EAAD,CACAC,KAAML,GACNM,QAASJ,GACTK,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAazL,GAAG,sBACb,uBAIH,kBAAC0L,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmB3L,GAAG,4BAAtB,8BAIA,kBAAC,IAAD,CAAW4L,KAAMC,KAAKC,MAAQ,IAChCC,SArDW,SAAC,GAAmB,IAAfC,EAAc,EAAdA,QACpB,OACE,yDACyBA,EADzB,cAoDEC,WAAcf,MAId,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQhB,QAhEO,WACrB5L,QAAQC,IAAI,oBA+D2BoC,MAAM,WAAvC,UAGA,kBAACuK,EAAA,EAAD,CAAQhB,QAxEI,WAClB5L,QAAQC,IAAI,aAuEwBoC,MAAM,UAAUwK,WAAS,GAAvD,WAaJ,kBAACvM,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAAS2J,QAAS,GAK/C,kBAAC2C,EAAA,EAAD,CAAYC,aAAW,SAAS3K,KAAK,UAAUxB,MAAOqF,EAAaR,SAAU5E,SAzhBzD,SAACmM,GACzB,IAAIxH,EAAWS,EAAaT,SACxBgC,EAAWwF,EAAEC,OAAOrM,MACxB0G,GAAyB9B,EAAUgC,GACnCW,GAA8B3C,EAAUgC,IAqhBsE3F,KAAG,GAE3G,kBAACqL,EAAA,EAAD,CAAKlC,OAAQ,EAAGmC,YAAazM,GAAMyG,YAAaiG,aAAc,GAAIC,UAAU,OAAOC,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGC,GAAI,GACxG,kBAAC3L,EAAA,EAAD,CAAkBlB,MAAM,IAAImB,QAAS,kBAAC2L,EAAA,EAAD,MAAWhN,MAAO,0BAAMiN,MAAO,CAAE1K,SAAU,SAAzB,iBAGzD,kBAACiK,EAAA,EAAD,CAAKlC,OAAQ,EAAGmC,YAAazM,GAAM0G,YAAagG,aAAc,GAAIC,UAAU,OAAOC,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGC,GAAI,GACxG,kBAAC3L,EAAA,EAAD,CAAkBlB,MAAM,IAAImB,QAAS,kBAAC2L,EAAA,EAAD,MAAWhN,MAAO,0BAAMiN,MAAO,CAAE1K,SAAU,SAAzB,mBAQ7D,kBAAC3C,EAAA,EAAD,CAAMC,WAAS,EAACyJ,MAAI,EAACG,QAAS,EAAG3J,eAAe,gBAAgBoN,WAAW,WAEzE,kBAACtN,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,IAAE,GACX,kBAAC,GAAD,CAAOnK,SAAU,SAAUC,UAAWsC,EAAaN,cAGrD,kBAACrF,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,IAAE,GACX,kBAAC,GAAD,CAAOnK,SAAU,gBAAiBC,UAAWsC,EAAaP,aAAawC,WAAW4F,UAAU,EAAG,OAEjG,kBAACxN,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,IAAE,GACX,kBAAC,GAAD,CAAOnK,SAAU,eAAgBC,UAAWsC,EAAaL,eAE3D,kBAACtF,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,IAAE,GACX,kBAAC,GAAD,CAAOnK,SAAU,iBAAkBC,UAAWsC,EAAaJ,gBAE7D,kBAACvF,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,IAAE,GACX,kBAAC,GAAD,CAAOnK,SAAU,YAAaC,UAAWsC,EAAaH,qBAY1D,kBAACxF,EAAA,EAAD,CAAMC,WAAS,EAACyJ,MAAI,EAACG,QAAS,EAAG3J,eAAe,UAG9C,kBAAC0M,EAAA,EAAD,CAAKlC,OAAQ,EAAGrI,QAAS,GACvB,kBAACrC,EAAA,EAAD,CAAMC,WAAS,EAAC4J,QAAS,EAAG3J,eAAe,UACzC,kBAACF,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,GAAI,GAAIvK,UAAWF,GAAQqH,UAAtC,qBAIA,kBAACnK,EAAA,EAAD,CAAMC,WAAS,EAACyJ,MAAI,EAAC6D,GAAI,IAGvB,kBAACvN,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,GAAI,EAAGF,MAAO,CAAE3C,OAAQ,mBACjC,kBAACvH,EAAA,EAAD,CAAYH,UAAWF,GAAQJ,OAA/B,wBACA,kBAAClD,EAAD,CAAagB,aA3YF,SAACuL,GAExBrM,QAAQC,IAAI,gBAAiBoM,GAE7BnG,EAAgB,2BACXD,GADU,IAEb/E,YAAamL,KAGfzF,EAAkB,2BAAK3F,GAAN,IAAsBC,aAAa,MAkYKG,aA/XlC,SAAC0M,GAExB/N,QAAQC,IAAI,mBAAoB8N,GAGhC,IAAMC,EAAUD,EAAKE,eAAe,QAAS,CAAEC,SAAU,qBACzDlO,QAAQC,IAAI,UAAW+N,GAIvB9H,EAAgB,2BACXD,GADU,IAEb3E,YAAa0M,KAGfpH,EAAkB,2BAAK3F,GAAN,IAAsBK,aAAa,MAiXtCpB,aAAc+F,EAAa/E,YAAaE,aAAc6E,EAAa3E,YACnEL,eAAgBA,KAGpB,kBAACX,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,GAAI,EAAGvK,UAAWF,GAAQiD,oBAAqBsH,MAAO,CAAE3C,OAAQ,mBACzE,kBAACmD,EAAA,EAAD,CAAanN,MAAOC,EAAeoF,qBACjC,kBAAC+H,EAAA,EAAD,KAAY,kBAAC3K,EAAA,EAAD,CAAYH,UAAWF,GAAQJ,OAA/B,0CAEZ,kBAACzB,GAAD,CACEY,iBAtXK,SAACkM,GAEtB,IAAIC,EAAcrI,EAAaI,oBAI3BgI,EAAMpB,OAAOhL,QACfqM,EAAYC,KAAKF,EAAMpB,OAAO7K,MAG9BkM,EAAcA,EAAYE,QAAO,SAAAxB,GAAC,OAAIA,IAAMqB,EAAMpB,OAAO7K,QAG3D8D,EAAgB,2BACXD,GADU,IAEbI,oBAAqBiI,KAGvB1H,EAAkB,2BAAK3F,GAAN,IAAsBoF,qBAAqB,MAqW5C3E,KAAMuE,EAAaI,sBAGrB,kBAACoI,EAAA,EAAD,KAAiBxN,EAAeoF,oBAAsB,WAAa,MAMvE,kBAAC/F,EAAA,EAAD,CAAMC,WAAS,EAACyJ,MAAI,EAAC6D,GAAI,EAAGF,MAAO,CAAE3C,OAAQ,kBAAoB1H,UAAWF,GAAQgI,MAClF,kBAAC9K,EAAA,EAAD,CAAM0J,MAAI,GACR,kBAACvG,EAAA,EAAD,CAAYH,UAAWF,GAAQJ,OAA/B,4DAGF,kBAAC1C,EAAA,EAAD,CAAM0J,MAAI,EAAC1G,UAAWF,GAAQiI,WAC5B,kBAACqD,EAAA,EAAD,CACEC,WAAY,CACVC,eAAgB,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SAAzB,MAChBC,WAAY,CAAEC,IAAK,EAAGC,IAAK,KAG7BC,KAAK,SACLzO,GAAG,kBACHG,MAAOqF,EAAaK,UAIpBzF,SA3XM,SAACmM,GACvB9G,EAAgB,2BACXD,GADU,IAEbK,UAAW0G,EAAEC,OAAOrM,SAEtBgG,EAAkB,2BAAK3F,GAAN,IAAsBqF,WAAW,MAuXlCtF,MAAOC,EAAeqF,UACtBnF,WAAYF,EAAeqF,UAAY,WAAa,OAK1D,kBAAChG,EAAA,EAAD,CAAMC,WAAS,EAACyJ,MAAI,EAAC6D,GAAI,EAAGF,MAAO,CAAE3C,OAAQ,kBAAoB1H,UAAWF,GAAQgI,MAClF,kBAAC9K,EAAA,EAAD,CAAM0J,MAAI,EAAC1G,UAAWF,GAAQJ,OAC5B,kBAACS,EAAA,EAAD,CAAYH,UAAWF,GAAQJ,OAA/B,4DAGF,kBAAC1C,EAAA,EAAD,CAAM0J,MAAI,EAAC1G,UAAWF,GAAQiI,WAC5B,kBAACqD,EAAA,EAAD,CACEC,WAAY,CACVC,eAAgB,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SAAzB,KAChBC,WAAY,CAAEC,IAAK,EAAGC,IAAK,QAG7BC,KAAK,SACLzO,GAAG,kBAEHG,MAAOqF,EAAaM,YAGpB1F,SA5YM,SAACmM,GACvBhN,QAAQC,IAAI,aAAc+M,EAAEC,OAAOrM,OACnCsF,EAAgB,2BACXD,GADU,IAEbM,YAAayG,EAAEC,OAAOrM,SAExBgG,EAAkB,2BAAK3F,GAAN,IAAsBsF,aAAa,MAuYpCvF,MAAOC,EAAesF,YACtBpF,WAAYF,EAAesF,YAAc,WAAa,QAM9D,kBAACjG,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,GAAI,IAEb,kBAAC,KAAD,GACE7K,MAAM,oCADR,sBAES/B,EAAe0F,iBACpB,kBAAClD,EAAA,EAAD,CAAYH,UAAWF,GAAQpC,OAA/B,sCACE,oCAJN,wBAjfI,CACd,CACEgC,MAAO,iBAAkBmM,MAAO,iBAGlC,CACEnM,MAAO,UAAWmM,MAAO,UAAWD,KAAM,WAK5C,CACElM,MAAO,cAAemM,MAAO,YAAaD,KAAM,WAKlD,CACElM,MAAO,sBAAuBmM,MAAO,oBAAqBC,SAAU,QAASF,KAAM,aA+d3E,qBAMQrI,IANR,sBAOSyC,IAPT,wBASW,CACP+F,QAAQ,EACRC,QAAQ,EACRC,SAAS,EACTC,oBAAqB,IAbzB,sBAiBSvO,EAAe0F,kBAAoB,CAAEqE,OAAQ,kBAjBtD,yBAmBY,CACRyE,YAAa,SAACpH,EAASqH,GAAV,OAAsB,IAAIC,SAAQ,SAACC,EAASC,GAEvDjJ,EAAkB,2BAAK3F,GAAN,IAAsB0F,kBAAkB,KAEzD,IAAI2B,EAAQoH,EAAQ7G,kBAGhBK,EAAoBC,KAAKC,IAAIJ,SAASX,EAAQU,SAAWC,SAASX,EAAQY,YAG1EV,EAAU,CACZ,kBAAqBF,EAAQQ,kBAC7B,cAAiBR,EAAQS,cACzB,QAAWT,EAAQU,QACnB,UAAaV,EAAQY,UACrB,kBAAqBC,GAEvBlJ,QAAQC,IAAIsI,GAIZH,GAAgBC,EAASC,EAAOC,GAASuH,MAAK,SAAAnI,GAC5C3H,QAAQC,IAAI0H,GACZiI,aA3CR,KAmEF,kBAACtP,EAAA,EAAD,CAAMyP,WAAS,EAAC/F,MAAI,EAAC6D,GAAI,GAAIrN,eAAe,SAAS2J,QAAS,GAI5D,kBAAC6F,EAAA,EAAD,CAAUC,IAAI,EAAMC,QAAS,IAAM1P,eAAe,UAChD,kBAAC2P,EAAA,EAAD,CAAMF,IAAI,EAAMC,QAAS,IAAM1P,eAAe,UAE5C,kBAACF,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAC7BmN,MAAO1M,EAAeyF,uBAAyB,CAAEsE,OAAQ,kBACzD,kBAAC1K,EAAA,EAAD,CAAM0J,MAAI,EAAC1G,UAAWF,GAAQJ,OAC5B,kBAACS,EAAA,EAAD,CAAYH,UAAWF,GAAQJ,OAA/B,+FAMF,kBAAC1C,EAAA,EAAD,CAAMC,WAAS,EAACyJ,MAAI,EAAC6D,GAAI,GAAIrN,eAAe,SAASmN,MAAO,CAAE3C,OAAQ,mBACpE,kBAAC1K,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,GAAI,EAAGvK,UAAWF,GAAQW,KAAMvD,eAAe,UACxD,kBAACiD,EAAA,EAAD,CAAYH,UAAWF,GAAQJ,OAA/B,kFAGF,kBAAC1C,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,GAAI,EAAGrN,eAAe,UAC/B,kBAACsM,EAAA,EAAD,CAAYjL,KAAG,EAAChB,SAtelB,SAACmM,GACnB9G,EAAgB,2BACXD,GADU,IAEbQ,oBAAqBuG,EAAEC,OAAOrM,UAme8BA,MAAQa,OAAOwE,EAAaQ,sBAEpE,kBAAC3E,EAAA,EAAD,CAAkBlB,MAAM,UAAUmB,QAAS,kBAAC2L,EAAA,EAAD,MAAWhN,MAAM,kBAC5D,kBAACoB,EAAA,EAAD,CAAkBlB,MAAM,QAAQmB,QAAS,kBAAC2L,EAAA,EAAD,MAAWhN,MAAM,mBAOhE,kBAACJ,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,GAAI,GAAIvK,UAAWF,GAAQ0H,SAEtC,kBAACxK,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,GAAI,GAAIvK,UAAWF,GAAQJ,OAC1C,kBAACS,EAAA,EAAD,CAAYH,UAAWF,GAAQJ,OAA/B,uDAGM,0BAAMoN,YAAU,EAACC,aAAa,MAE5B,kBAAC3B,EAAA,EAAD,CACEjO,GAAG,4BAEH6P,WAAS,EACTC,KAAM,EACN3P,MAASqF,EAAaS,sBACtB8J,aAAc,GACdjN,QAAQ,WACR1C,SAvfE,SAACmM,GACzBhN,QAAQC,IAAI+M,EAAEC,OAAOrM,OACrBsF,EAAgB,2BACXD,GADU,IAEbS,sBAAuBsG,EAAEC,OAAOrM,SAGlCgG,EAAkB,2BAAK3F,GAAN,IAAsByF,uBAAuB,cA2ftD,kBAACpG,EAAA,EAAD,CAAMyP,WAAS,EAAC/F,MAAI,EAAC6D,GAAI,GAAIrN,eAAe,SAAS2J,QAAS,GAE5D,kBAAC7J,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,GAAI,GAAIvK,UAAWF,GAAQJ,OACpC,kBAACS,EAAA,EAAD,CAAYH,UAAWF,GAAQJ,OAA/B,8FAIF,kBAAC1C,EAAA,EAAD,CAAM0J,MAAI,EAAC6D,GAAI,GAAIvK,UAAWF,GAAQ0H,SACpC,kBAAC4D,EAAA,EAAD,CAEEjO,GAAG,4BAEH6P,WAAS,EACTC,KAAM,EAEN3P,MAAOqF,EAAaO,oBACpBjD,QAAQ,WACR1C,SAxgBK,SAACmM,GACpBhN,QAAQC,IAAI+M,EAAEC,OAAOrM,OACrBgG,EAAkB,2BAAK3F,GAAN,IAAsBuF,qBAAqB,KAC5DN,EAAgB,2BACXD,GADU,IAEbO,oBAAqBwG,EAAEC,OAAOrM,UAugBlBI,MAAOC,EAAeuF,oBACtBrF,WAAYF,EAAeuF,oBAAsB,WAAa,QAiBpE,kBAAClG,EAAA,EAAD,CAAM0J,MAAI,EAACG,QAAS,GAAI3J,eAAe,UACrC,kBAACoM,EAAA,EAAD,CACEvK,MAAM,UACNkB,QAAQ,YACRqI,QA5uBO,SAACoB,GAIpB,IAAIyD,EAAiB,eAAQxP,GAG7BwP,EAAqBxK,EAAa/E,YAA4DuP,EAA1E,2BAAiCA,GAAjC,IAAoDvP,aAAa,IACrFuP,EAAqBxK,EAAa3E,YAA4DmP,EAA1E,2BAAiCA,GAAjC,IAAoDnP,aAAa,IAErFmP,EAAgE,IAA5CxK,EAAaI,oBAAoBqK,OAAjC,2BAAqDD,GAArD,IAAwEpK,qBAAqB,IAASoK,EAE1HA,EAAoBtK,IAAoBF,EAAaQ,oBAAjC,2BAA4DgK,GAA5D,IAA+EhK,qBAAqB,IAASgK,EACjIA,EAAoBtK,IAAoBF,EAAaS,sBAAjC,2BAA8D+J,GAA9D,IAAiF/J,uBAAuB,IAAS+J,EACrIA,EAAqBxK,EAAaO,oBAA4EiK,EAA1F,2BAAyCA,GAAzC,IAA4DjK,qBAAqB,IACrGiK,EAAqBxK,EAAaM,YAA4DkK,EAA1E,2BAAiCA,GAAjC,IAAoDlK,aAAa,IACrFkK,EAAqBxK,EAAaK,UAAwDmK,EAAtE,2BAA+BA,GAA/B,IAAkDnK,WAAW,IAEjF,IAAIqK,EAAkB9J,GAAckD,MAAK,SAAAnB,GAAG,OAAqB,GAAjBA,EAAIK,aAChD2H,EAAgB/J,GAAckD,MAAK,SAAA8G,GAAI,OAAoB,GAAhBA,EAAK9H,WAGpD0H,EAAqBE,GAAoBC,EAAmEH,EAAxF,2BAA0CA,GAA1C,IAA6D9J,kBAAkB,IAEnGC,EAAkB6J,GAMlBzQ,QAAQC,IAAIwQ,GACZ,IAAIK,EAAY,EAEhB,IAAK,IAAIC,KAAON,EACVA,EAAkBM,KACpBD,GAAa,GAgBjB,GAZA9Q,QAAQC,IAAI,qBAAsBgG,EAAa/E,aAE/ClB,QAAQC,IAAI,qBAAsBgG,EAAa3E,aAU9B,GAAbwP,EAAgB,CAClB9Q,QAAQC,IAAIgG,EAAaR,UACzB,IAAIuL,EAAgB,QAAU/K,EAAaR,SAAW,QACtDzF,QAAQC,IAAI+Q,GAEZ3J,GAAS,2BAAK3G,IAAN,kBAAcsQ,EAAgB,kBAEtC3H,GAAapD,EAAaT,SAAUS,EAAaR,SAAUQ,GACxD6J,MAAK,SAAAnI,GACJ3H,QAAQC,IAAI0H,GACZX,IAAqB,MAEtBiK,OAAM,SAAAjQ,GACLhB,QAAQC,IAAIe,WAMhBkQ,MAAM,kCACNlK,IAAqB,IAsqBXmK,SAAUpK,IAGPA,GAAqB,2BACjBA,IAAqB,gB,iFC99B/BqK,GAAgB,uCAAG,WAAOC,EAAOC,GAAd,iBAAA7J,EAAA,6DAC5BzH,QAAQC,IAAIoR,EAAOC,GADS,SAGL5J,IAAMvD,IAAN,qCACWkN,EADX,YACoBC,IAJf,UAOJ,oBAJlB3J,EAHsB,QAObC,KAPa,yCAQjB,2BARiB,wBAUHD,EAASC,KAVN,eAUpBpD,EAVoB,yBAYjBA,GAZiB,4CAAH,wDCsB7B,SAAS+M,KACP,OACE,kBAAC9N,EAAA,EAAD,CAAYF,QAAQ,QAAQlB,MAAM,gBAAgBQ,MAAM,UACrD,kBACD,kBAAC2O,GAAA,EAAD,CAAMnP,MAAM,UAAUoP,KAAK,0BAA3B,SAEQ,KACP,IAAInF,MAAOoF,cACX,KAKP,IAAMpP,GAAYC,aAAW,SAACqB,GAAD,MAAY,CACvC+N,MAAO,CACL7N,UAAWF,EAAMuG,QAAQ,GACzByH,QAAS,OACTC,cAAe,SACfjE,WAAY,UAEdkE,OAAQ,CACNpP,OAAQkB,EAAMuG,QAAQ,GACtB4H,gBAAiBnO,EAAMoO,QAAQC,UAAUC,MAE3CC,KAAM,CACJtO,MAAO,OACPC,UAAWF,EAAMuG,QAAQ,IAE3BiI,OAAQ,CACN1P,OAAQkB,EAAMuG,QAAQ,EAAG,EAAG,IAE9BkI,MAAO,CACLT,QAAS,OACThE,WAAY,SACZpN,eAAgB,UAElB8R,OAAQ,CACNP,gBAAiBnO,EAAMoO,QAAQO,WAAWZ,MAC1C3G,OAAQ,iBACRwH,UAAW5O,EAAM6O,QAAQ,GACzB9P,QAASiB,EAAMuG,QAAQ,EAAG,EAAG,QAIlB,SAASuI,GAAU3S,GAChC,MAA0BwF,qBAA1B,mBAAO8L,EAAP,KAAcsB,EAAd,KACA,EAAgCpN,qBAAhC,mBAAO+L,EAAP,KAAiBsB,EAAjB,KACM9N,EAAUC,cAEhB,EAAwBO,IAAMC,UAAS,GAAvC,mBAAOuG,EAAP,KAAa+G,EAAb,KAqBMzP,EAAUd,KAEVwQ,EAAW,uCAAG,4BAAArL,EAAA,6DAEb4J,GAASH,MAAM,sBACfI,GAAYJ,MAAM,yBAHL,SAMKE,GAAiBC,EAAOC,GAN7B,OAQD,6BAFX9M,EANY,QAShB0M,MAAM1M,GAEc,eAAbA,EACP0M,MAAM,kBAMqB,SAAvB1M,EAASuO,WACXhT,EAAMiT,oBAEJxO,GAKFM,EAAQyJ,KAAK,sBAEbvO,QAAQC,IAAIuE,EAASgB,UAErBzF,EAAMiT,oBAEJxO,GAEFM,EAAQyJ,KAAK,gBAlCC,2CAAH,qDA0CnB,OACE,kBAACwB,GAAA,EAAD,CAAW1C,UAAU,OAAO4F,SAAS,MACnC,kBAACC,GAAA,EAAD,MACA,yBAAK5P,UAAWF,EAAQuO,OACtB,kBAACwB,GAAA,EAAD,CAAQ7P,UAAWF,EAAQ0O,QACzB,kBAAC,KAAD,OAEF,kBAACrO,EAAA,EAAD,CAAY4J,UAAU,KAAK9J,QAAQ,MAAnC,WAGA,0BAAMD,UAAWF,EAAQ+O,KAAMiB,UAAQ,GACrC,kBAAC1E,EAAA,EAAD,CACEnL,QAAQ,WACRb,OAAO,SACP2Q,UAAQ,EACRC,WAAS,EACT7S,GAAG,QACHC,MAAM,gBACN0B,KAAK,QACLiO,aAAa,QACbxD,WAAS,EACThM,SA3EY,SAACmM,GACnBhN,QAAQC,IAAI+M,EAAEC,OAAOrM,OACrB+R,EAAS3F,EAAEC,OAAOrM,UA2Ed,kBAAC8N,EAAA,EAAD,CACEnL,QAAQ,WACRb,OAAO,SACP2Q,UAAQ,EACRC,WAAS,EACTlR,KAAK,WACL1B,MAAM,WACNwO,KAAK,WACLzO,GAAG,WACH4P,aAAa,mBACbxP,SAlFe,SAACmM,GACtB4F,EAAY5F,EAAEC,OAAOrM,UAoFjB,kBAACgM,EAAA,EAAD,CACEsC,KAAK,SACLoE,WAAS,EACT/P,QAAQ,YACRlB,MAAM,UACNiB,UAAWF,EAAQgP,OACnBxG,QAASkH,GANX,WAWA,kBAACxS,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,YAC7B,kBAACF,EAAA,EAAD,CAAM0J,MAAI,EAACkF,KAAK,SAAStD,QA/Gd,WACjBiH,GAAQ,KA+GA,kBAACrB,GAAA,EAAD,CAAMC,KAAK,IAAIlO,QAAQ,SAAvB,wBAeR,kBAACgQ,GAAA,EAAD,CACIjQ,UAAWF,EAAQiP,MACnBvG,KAAMA,EACNC,QA9Hc,WAClB8G,GAAQ,IA+HJW,kBAAmBC,KACnBC,cAAe,CACbxD,QAAS,MAGX,kBAACC,EAAA,EAAD,CAAMF,GAAInE,GACR,yBAAKxI,UAAWF,EAAQkP,QACtB,gDACA,iEACA,iDACA,wDAIR,kBAACpF,EAAA,EAAD,CAAKyG,GAAI,GACP,kBAACpC,GAAD,QC7MN,SAASA,KACP,OACE,kBAAC9N,EAAA,EAAD,CAAYF,QAAQ,QAAQlB,MAAM,gBAAgBQ,MAAM,UACrD,kBACD,kBAAC2O,GAAA,EAAD,CAAMnP,MAAM,UAAUoP,KAAK,0BAA3B,SAEQ,KACP,IAAInF,MAAOoF,cACX,KAKP,IAAMpP,GAAYC,aAAW,SAACqB,GAAD,MAAY,CACvC+N,MAAO,CACL7N,UAAWF,EAAMuG,QAAQ,GACzByH,QAAS,OACTC,cAAe,SACfjE,WAAY,UAEdkE,OAAQ,CACNpP,OAAQkB,EAAMuG,QAAQ,GACtB4H,gBAAiBnO,EAAMoO,QAAQC,UAAUC,MAE3CC,KAAM,CACJtO,MAAO,OACPC,UAAWF,EAAMuG,QAAQ,IAE3BiI,OAAQ,CACN1P,OAAQkB,EAAMuG,QAAQ,EAAG,EAAG,QAK1ByJ,GAAc,uCAAG,WAAOC,EAAWvC,GAAlB,eAAA7J,EAAA,6DAEjBc,EAAU,CACZ,UAAasL,EACb,aAAgBvC,GAJG,SAMH5J,IAAMc,IAAN,2CAAsDD,GANnD,yDAAH,wDAWL,SAASuL,GAAe/T,GACrC,IAAMqD,EAAUd,KACVwC,EAAUC,cAEhB,EAAsCQ,qBAAtC,mBAAOwO,EAAP,KAAoBC,EAApB,KACA,EAA8CzO,qBAA9C,mBAAO0O,EAAP,KAAwBC,EAAxB,KACA,EAAkC3O,qBAAlC,mBAAOsO,EAAP,KAAkBM,EAAlB,KAYA7O,IAAMsE,WAAU,WACduK,EAAapU,EAAMyE,SAAS4P,aAE3B,IAgBH,OACE,kBAACrE,GAAA,EAAD,CAAW1C,UAAU,OAAO4F,SAAS,MACnC,kBAACC,GAAA,EAAD,MACA,yBAAK5P,UAAWF,EAAQuO,OACtB,kBAACwB,GAAA,EAAD,CAAQ7P,UAAWF,EAAQ0O,QACzB,kBAAC,KAAD,OAEF,kBAACrO,EAAA,EAAD,CAAY4J,UAAU,KAAK9J,QAAQ,MAAnC,mBAGA,0BAAMD,UAAWF,EAAQ+O,KAAM/B,YAAU,GACvC,kBAAC1B,EAAA,EAAD,CACEnL,QAAQ,WACRb,OAAO,SACP2Q,UAAQ,EACRC,WAAS,EACTlR,KAAK,eACL1B,MAAM,eACNwO,KAAK,WACLzO,GAAG,WACH4P,aAAa,mBACbxP,SAhDQ,SAACmM,GACjBgH,EAAehH,EAAEC,OAAOrM,UAiDlB,kBAAC8N,EAAA,EAAD,CACEnL,QAAQ,WACRb,OAAO,SACP2Q,UAAQ,EACRC,WAAS,EACTlR,KAAK,mBACL1B,MAAM,mBACNwO,KAAK,WACLzO,GAAG,WACH4P,aAAa,mBACbxP,SAxDY,SAACmM,GACrBkH,EAAmBlH,EAAEC,OAAOrM,UA0DtB,kBAACgM,EAAA,EAAD,CACEsC,KAAK,SACLoE,WAAS,EACT/P,QAAQ,YACRlB,MAAM,UACNiB,UAAWF,EAAQgP,OACnBxG,QAvDmB,WAEvBmI,IAAgBE,GAGlBL,GAAeC,EAAWE,GAE1BjP,EAAQyJ,KAAK,WAEb2C,MAAM,2BAwCF,qBAaJ,kBAAChE,EAAA,EAAD,CAAKyG,GAAI,GACP,kBAAC,GAAD,QC7HR,IAiEeU,GAjEH,WACV,MAAgC9O,mBAPlC,WACE,IAAM+O,EAAkBpQ,KAAQC,IAAI,YAEpC,YAA2BF,IAApBqQ,EAAgC,GAAK5P,KAAKS,MAAMmP,GAIdC,IAAzC,mBAAO/P,EAAP,KAAiBgQ,EAAjB,KAEAxU,QAAQC,IAAI,YAAYuE,GACxB,IAAMiQ,EAAyB,SAACjQ,GAE9BgQ,EAAYhQ,GACZD,GAAgBC,IAWlB,OACE,kBAAC,IAAD,KACE,6BACE,6BACE,4BAIE,4BAC0B,UAAvBA,EAASuO,WAAyB,kBAAC,IAAD,CAAM2B,GAAG,eAAT,eAErC,4BAC0B,UAAvBlQ,EAASuO,UAAuB,kBAAC,IAAD,CAAM2B,GAAG,UAAU9I,QAlB3C,WACnB4I,EAAY,IACZtQ,KAAQyQ,OAAO,cAgB4B,UAAwD,kBAAC,IAAD,CAAMD,GAAG,UAAT,UAE3F,4BACA,uBAAGjD,KAAK,+CAA+CmD,UAAQ,GAA/D,kBAOJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAChB,kBAACpC,GAAD,CAAWM,oBAAuByB,KAGpC,kBAAC,IAAD,CAAOK,KAAK,oBACV,kBAAC,GAAD,CAAgBtQ,SAAYA,KAE9B,kBAAC,IAAD,CAAOqQ,OAAK,EAACC,KAAM,eACjB,kBAAC,GAAD,CAAWtQ,SAAYA,KAEzB,kBAAC,IAAD,CAAOsQ,KAAM,KACX,kBAACpC,GAAD,CAAWM,oBAAuByB,SCtExCM,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OAEH,kBAAC,GAAD,MAGJJ,M","file":"static/js/main.84ca08e4.chunk.js","sourcesContent":["import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { parseISO } from 'date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport { convertToLocalTime } from 'date-fns-timezone';\r\n\r\n\r\n\r\n\r\n\r\nexport default function DatePickers(props) {\r\n\r\n\r\n\r\n  console.log('ogDate', props.selectedDate)\r\n\r\n  // let dateOfCount = String(props.selectedDate)\r\n\r\n  \r\n\r\n  // dateOfCount = dateOfCount.slice(0,-1)\r\n\r\n  \r\n    \r\n    \r\n\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Grid container justifyContent=\"space-around\">\r\n        <KeyboardDatePicker\r\n          //margin=\"small\"  \r\n          id=\"date-picker-dialog\"\r\n          label=\"Select Date of count\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={props.selectedDate}\r\n          onChange={props.onDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n          error ={props.formValidation.DateOfCount}\r\n          helperText = { props.formValidation.DateOfCount ?'Required':''}\r\n        />\r\n        <KeyboardTimePicker\r\n          //margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Select Time of count\"\r\n          value={props.selectedTime}\r\n          onChange={props.onTimeChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n          error ={props.formValidation.TimeOfCount}\r\n          helperText = { props.formValidation.TimeOfCount ?'Required':''}\r\n        />\r\n\r\n        </Grid>\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n ","import React, { useEffect } from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nexport default function CheckboxLabels(props) {\r\n//   const [state, setState] = React.useState({\r\n//     id:'3',\r\n//     VotingEquipmentUsed: []\r\n\r\n//   })\r\n  \r\n\r\n//   const handleChange = (event) => {\r\n//     let updatedList = state.VotingEquipmentUsed\r\n//     if (event.target.checked){\r\n//         updatedList.push(event.target.name)\r\n     \r\n//         }\r\n//     else{\r\n//         console.log('false', event.target.name)\r\n//         updatedList = updatedList.filter(e => e !== event.target.name)\r\n//         console.log('updatedList', updatedList)\r\n//     }\r\n    \r\n//     setState({VotingEquipmentUsed: updatedList})\r\n    \r\n//     }\r\n    \r\n//     useEffect(() => {\r\n        \r\n//         console.log('checkboxstate', state.VotingEquipmentUsed)\r\n//       }, [state]);\r\n\r\n// console.log(props.list)\r\n// console.log(typeof(props.list))\r\nconst votingArray = String(props.list).split(',')\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n          \r\n            checked={votingArray.includes(\"M100_tabulator\")}\r\n            onChange={props.onCheckBoxChange}\r\n            name=\"M100_tabulator\"\r\n            color=\"primary\"\r\n          />\r\n          \r\n        }\r\n        label=\"M100 tabulator\"\r\n      />\r\n    <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={votingArray.includes(\"DS200_tabulator\")}\r\n            onChange={props.onCheckBoxChange}\r\n            name=\"DS200_tabulator\"\r\n            color=\"primary\"\r\n          />\r\n          \r\n        }\r\n        label=\"DS200 tabulator\"\r\n      />\r\n\r\n    <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={votingArray.includes(\"D650_central_tabulator\")}\r\n            onChange={props.onCheckBoxChange}\r\n            name=\"D650_central_tabulator\"\r\n            color=\"primary\"\r\n          />\r\n          \r\n        }\r\n        label=\"D650 central tabulator\"\r\n      />\r\n\r\n    <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={votingArray.includes(\"DS_850_central_tabulator\")}\r\n            onChange={props.onCheckBoxChange}\r\n            name=\"DS_850_central_tabulator\"\r\n            color=\"primary\"\r\n          />\r\n          \r\n        }\r\n        label=\"DS 850 central tabulator\"\r\n      />\r\n\r\n    <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n          checked={votingArray.includes(\"iVotronic_touchscreen_machines\")}\r\n            onChange={props.onCheckBoxChange}\r\n            name=\"iVotronic_touchscreen_machines\"\r\n            color=\"primary\"\r\n          />\r\n          \r\n        }\r\n        label=\"iVotronic touchscreen machines\"\r\n      />    \r\n    \r\n    </FormGroup>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 70,\r\n    margin: 0,\r\n    padding:0,\r\n    textAlign: \"center\",\r\n    align: \"center\",\r\n    minHeight: 5,\r\n    height: '100%'\r\n\r\n  },\r\n\r\n  title: {\r\n    fontSize: 14,\r\n    margin: 0,\r\n    padding:0,\r\n  },\r\n  pos: {\r\n    margin: 0,\r\n    padding:0,\r\n  },\r\n});\r\n\r\nexport default function SimpleCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} >\r\n          {props.cardName}\r\n        </Typography>\r\n\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          {props.CardValue || 'N\\A'}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display: 'flex',\r\n    width: '100%'\r\n  },\r\n  title:{\r\n    fontSize: 20,\r\n    margin: 1,\r\n    marginTop:10,\r\n    padding:1,\r\n    textAlign: \"center\",\r\n\r\n  },\r\n  text:{\r\n    margin: 10\r\n\r\n  }\r\n}));\r\n\r\nexport default function SimplePaper() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Paper elevation={1}>\r\n      <Typography className={classes.title} >\r\n          Please Filled Out Following Form \r\n        </Typography>\r\n        <Grid item className={classes.text}>\r\n        Remember that the sample audit count is a test to show that the election equipment worked properly. If the hand count is different than the machine count, that difference must be explained. However, a difference in the count does NOT change election results.\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import Cookies from 'js-cookie';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst hasCookiesExpired =()=> Cookies.get('userData') === undefined;\r\n\r\nlet cookieIntervalId = null;\r\n\r\nfunction clearCookiesInterval() {\r\n  if (cookieIntervalId !== null) {\r\n    clearInterval(cookieIntervalId);\r\n    cookieIntervalId = null;\r\n  }\r\n}\r\n\r\nexport function useLoginCookiesTimer() {\r\n  console.log('callthisfunction')\r\n  const history = useHistory();\r\n  clearCookiesInterval();\r\n\r\n  cookieIntervalId = setInterval(() => {\r\n    console.log('timer', hasCookiesExpired())\r\n    if (hasCookiesExpired()) {\r\n      if (window.confirm('Your login has expired. Would you like to stay logged in?')) {\r\n        // extend cookie\r\n        const userData = JSON.parse(Cookies.set('userData'));\r\n        setLoginCookies(userData);\r\n      } else {\r\n        clearCookiesInterval();\r\n        history.replace('/login');\r\n      }\r\n    }\r\n  }, 2000)\r\n}\r\n\r\nexport function setLoginCookies(userData) {\r\n  //const in30Minutes = 1/48\r\n  const in30Minutes = 1/12;\r\n  Cookies.set('userData', JSON.stringify(userData), {\r\n      expires: in30Minutes\r\n  });\r\n}","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, Button, Fade } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { forwardRef } from 'react';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Check from '@material-ui/icons/Check';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\n\r\n//import moment from 'moment-timezone';\r\n\r\n//for dialog\r\n// import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Countdown from 'react-countdown';\r\n\r\n\r\n\r\n//components\r\nimport DatePickers from '../components/timepicker';\r\nimport CheckboxLabels from '../components/checkboxs';\r\nimport Cards from '../components/infoCards';\r\nimport SimplePaper from '../components/simplePaper';\r\nimport { useLoginCookiesTimer } from '../loginCookies';\r\nimport AlertDialog from '../components/alertDialog'\r\n\r\n//moment.tz.setDefault(\"America/New_York\");\r\n\r\nconst AuditForm = (props) => {\r\n  // const timer = useLoginCookiesTimer();\r\n  useLoginCookiesTimer();\r\n\r\n  const emptySampleDetail = {\r\n    CountyId: \"\",\r\n    SampleID: \"\",\r\n    ElectionDate: \"\",\r\n    CountyName: \"\",\r\n    ContestName: \"\",\r\n    TypeOfSample: \"\",\r\n    PrecinctSiteName: \"\",\r\n    CandidateName1: \"\",\r\n    CandidateName2: \"\",\r\n    //to update\r\n    // DateOfCount: null,\r\n    // TimeOfCount: null,//Date.now(),\r\n    // VotingEquipmentUsed: [],\r\n    // HumanOrMachineError: \"\",\r\n    // DifferenceExplanation: \"\",\r\n    // PeoplePartyCounting: \"\",\r\n    // TotalTime: \"\",\r\n    // CostOfCount: \"\"\r\n\r\n  }\r\n\r\n  const [sampleDetail, setSampleDetail] = React.useState({\r\n    ...emptySampleDetail\r\n  });\r\n\r\n  const [showExplanation, setShowExplanation] = useState(false)\r\n\r\n\r\n  const [formValidation, setFormValidation] = useState({\r\n    DateOfCount: false,\r\n    TimeOfCount: false,\r\n    VotingEquipmentUsed: false,\r\n    TotalTime: false,\r\n    CostOfCount: false,\r\n    PeoplePartyCounting: false,\r\n    HumanOrMachineError: false,\r\n    DifferenceExplanation: false,\r\n    CandidatesCounts: false,\r\n\r\n  })\r\n\r\n//  const [radioValue, setRadioValue] = useState('Human')\r\n\r\n  const [selectedSampleId, setSelectedSampleId] = useState('');\r\n\r\n  const [candidateData, setCandidateData] = useState([]);\r\n\r\n\r\n  const [formInfoSubmitted, setFormInfoSubmitted] = useState(false)\r\n\r\n  const [submitButtonLabel, setSubmitButtonLabel] = useState('Submit')\r\n\r\n  const [label, setLabel] = useState({\r\n    label1: \"\",\r\n    label2: \" Done\",\r\n    label1Color: \"warning.main\",\r\n    label2Color: \"warning.main\"\r\n\r\n  })\r\n\r\n\r\n\r\n  const getdataByCountyandsample = async (countyId, sampleId) => {\r\n    const response = await axios.get(\r\n      `http://localhost:4000/sampleAudit/getDetailByCountySampleId/${countyId}/${sampleId}`\r\n    );\r\n    let data = await response.data;\r\n    console.log('Sample Data', data)\r\n\r\n    let dateOfCount = String(data.DateOfCount)\r\n    dateOfCount = dateOfCount.slice(0,-1)\r\n\r\n    let TimeOfCount = String(data.TimeOfCount)\r\n    TimeOfCount = TimeOfCount.slice(0,-1)\r\n\r\n\r\n    const CostOfCount = Number(data.CostOfCount)\r\n    const TotalTime = Number(data.TotalTime)\r\n    const VotingArray = data.VotingEquipmentUsed.split(',');\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      CountyId: countyId,\r\n      SampleID: data.SampleId.toString(),\r\n      ElectionDate: data.ElectionDate,\r\n      TypeOfSample: data.TypeOfSample,\r\n      PrecinctSiteName: data.PrecinctSiteName,\r\n      ContestName: data.ContestName,\r\n      CountyName: data.CountyName,\r\n      DateOfCount: dateOfCount,\r\n      TimeOfCount: TimeOfCount,\r\n      VotingEquipmentUsed: VotingArray,\r\n      HumanOrMachineError: data.HumanOrMachineError,\r\n      DifferenceExplanation: data.DifferenceExplanation,\r\n      PeoplePartyCounting: data.PeoplePartyCounting,\r\n      TotalTime: TotalTime,\r\n      CostOfCount: CostOfCount\r\n    });\r\n  };\r\n\r\n  const handleRadioButton = (e) => {\r\n    let CountyId = sampleDetail.CountyId\r\n    let sampleId = e.target.value\r\n    getdataByCountyandsample(CountyId, sampleId)\r\n    getCandidateByCountyandsample(CountyId, sampleId);\r\n  }\r\n\r\n\r\n\r\n  const getCandidateByCountyandsample = async (countyId, sampleId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:4000/sampleAudit/getCandidateByCountySampleId/${countyId}/${sampleId}`);\r\n      let data = await response.data;\r\n      setCandidateData(data);\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  };\r\n\r\n\r\n  const updateCandidate = async (newData, canId, putbody) => {\r\n    console.log('putbody', putbody)\r\n    console.log('canId', canId)\r\n    const res = await axios.put(`http://localhost:4000/sampleAudit/updateCandidate`, putbody);\r\n    // console.log(newData)\r\n    // console.log(candidateData)\r\n    let updateData = [...candidateData]\r\n    console.log('updateData', updateData)\r\n    console.log('newData', newData)\r\n    let objIndex = updateData.findIndex((obj => obj.SampleCandidateId == newData.SampleCandidateId));\r\n    updateData[objIndex].CandidateName = newData.CandidateName\r\n    updateData[objIndex].Machine = parseInt(newData.Machine)\r\n    updateData[objIndex].HandToEye = parseInt(newData.HandToEye)\r\n    updateData[objIndex].DifferenceInCount = Math.abs(parseInt(newData.Machine) - parseInt(newData.HandToEye))\r\n    setCandidateData(updateData)\r\n    console.log('candidate update name', updateData)\r\n\r\n  }\r\n\r\n  const updateSample = async (CountyId, SampleID, putbody) => {\r\n    //console.log('updatFunction', putbody);\r\n    const res = await axios.put(`http://localhost:4000/sampleAudit/updateSample`, putbody);\r\n  }\r\n\r\n\r\n\r\n  const hasError = () => {\r\n    let showError = false\r\n    // console.log('formValidation', formValidation)\r\n    // console.log('SampleDetailTrueorNot', !sampleDetail.DateOfCount)\r\n    //showExplanation\r\n    if (showExplanation) {\r\n\r\n      let keyList = [\r\n        'DateOfCount',\r\n        'TimeOfCount',\r\n        'VotingEquipmentUsed',\r\n        'TotalTime',\r\n        'CostOfCount',\r\n        'PeoplePartyCounting'\r\n      ]\r\n\r\n      for (var key in keyList) {\r\n        if (formValidation[key]) showError = true;\r\n      }\r\n\r\n    } else {\r\n\r\n      let keyList = [\r\n        'DateOfCount',\r\n        'TimeOfCount',\r\n        'VotingEquipmentUsed',\r\n        'TotalTime',\r\n        'CostOfCount',\r\n        'PeoplePartyCounting',\r\n        'HumanOrMachineError',\r\n        'DifferenceExplanation'\r\n      ]\r\n\r\n      for (var key in keyList) {\r\n        if (formValidation[key]) showError = true;\r\n      }\r\n    }\r\n\r\n    return showError\r\n\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    //some issues here\r\n\r\n    let newFormValidation = { ...formValidation };\r\n\r\n\r\n    newFormValidation = !sampleDetail.DateOfCount ? { ...newFormValidation, DateOfCount: true } : newFormValidation;\r\n    newFormValidation = !sampleDetail.TimeOfCount ? { ...newFormValidation, TimeOfCount: true } : newFormValidation;\r\n\r\n    newFormValidation = sampleDetail.VotingEquipmentUsed.length === 0 ? { ...newFormValidation, VotingEquipmentUsed: true } : newFormValidation;\r\n\r\n    newFormValidation = showExplanation && !sampleDetail.HumanOrMachineError ? { ...newFormValidation, HumanOrMachineError: true } : newFormValidation;\r\n    newFormValidation = showExplanation && !sampleDetail.DifferenceExplanation ? { ...newFormValidation, DifferenceExplanation: true } : newFormValidation;\r\n    newFormValidation = !sampleDetail.PeoplePartyCounting ? { ...newFormValidation, PeoplePartyCounting: true } : newFormValidation;\r\n    newFormValidation = !sampleDetail.CostOfCount ? { ...newFormValidation, CostOfCount: true } : newFormValidation;\r\n    newFormValidation = !sampleDetail.TotalTime ? { ...newFormValidation, TotalTime: true } : newFormValidation;\r\n\r\n    let HandToEyeIsZero = candidateData.some(obj => obj.HandToEye != 0)\r\n    let MachineIsZero = candidateData.some(objs => objs.Machine != 0)\r\n\r\n\r\n    newFormValidation = !HandToEyeIsZero && !MachineIsZero ? { ...newFormValidation, CandidatesCounts: true } : newFormValidation;\r\n\r\n    setFormValidation(newFormValidation)\r\n\r\n    // if sampleDetail.DateOfCount \r\n\r\n    //loop throuh every properties in the obj\r\n\r\n    console.log(newFormValidation)\r\n    let trueCount = 0\r\n\r\n    for (var key in newFormValidation) {\r\n      if (newFormValidation[key]) {\r\n        trueCount += 1\r\n      }\r\n    }\r\n\r\n    console.log('before submit date', sampleDetail.DateOfCount)\r\n\r\n    console.log('before submit time', sampleDetail.TimeOfCount)\r\n\r\n    // didn't get the most recent formValidation\r\n    //console.log(sampleDetail.TimeOfCount)\r\n\r\n    //use newFormValidation\r\n\r\n\r\n\r\n    //trueCount== 0\r\n    if (trueCount == 0) {\r\n      console.log(sampleDetail.SampleID)\r\n      var labeltochange = 'label' + sampleDetail.SampleID + \"Color\"\r\n      console.log(labeltochange)\r\n      //use square bracket we can pass in string \r\n      setLabel({ ...label, [labeltochange]: \"success.main\" })\r\n\r\n      updateSample(sampleDetail.CountyId, sampleDetail.SampleID, sampleDetail)\r\n        .then(response => {\r\n          console.log(response)\r\n          setFormInfoSubmitted(false);\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n\r\n\r\n\r\n    } else {\r\n      alert(\"Please fill all required cells\")\r\n      setFormInfoSubmitted(false)\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  var title = <h1>Sample Audit Record</h1>;\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Candidate Name\", field: \"CandidateName\",\r\n\r\n    },\r\n    {\r\n      title: \"Machine\", field: \"Machine\", type: \"numeric\",\r\n\r\n\r\n\r\n    },\r\n    {\r\n      title: \"Hand-To-Eye\", field: \"HandToEye\", type: \"numeric\",\r\n      //validate: rowData => rowData.year === undefined || rowData.year === \"\" ? \"Required\" : true\r\n      //helperText:'Invalid Email'\r\n\r\n    },\r\n    {\r\n      title: \"Difference In Count\", field: 'DifferenceInCount', editable: 'never', type: \"numeric\",\r\n      //validate: rowData => rowData.fee === undefined || rowData.fee === \"\" ? \"Required\" : true\r\n    }]\r\n\r\n  const tableIcons = {\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Check: forwardRef((props: any, ref: any) => <Check {...props} ref={ref} />),\r\n\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n\r\n    console.log('data of count', date)\r\n\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      DateOfCount: date\r\n\r\n    })\r\n    setFormValidation({ ...formValidation, DateOfCount: false })\r\n  }\r\n\r\n  const handleTimeChange = (time) => {\r\n\r\n    console.log('OG time of count', time)\r\n\r\n    //console.log('dateChange', date)\r\n    const NewTime = time.toLocaleString('en-US', { timeZone: 'America/New_York' })\r\n    console.log('NewTime', NewTime)\r\n\r\n\r\n\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      TimeOfCount: NewTime\r\n\r\n    })\r\n    setFormValidation({ ...formValidation, TimeOfCount: false })\r\n  }\r\n\r\n\r\n  const handleCheckbox = (event) => {\r\n\r\n    let updatedList = sampleDetail.VotingEquipmentUsed;\r\n\r\n\r\n\r\n    if (event.target.checked) {\r\n      updatedList.push(event.target.name)\r\n    }\r\n    else {\r\n      updatedList = updatedList.filter(e => e !== event.target.name)\r\n    }\r\n\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      VotingEquipmentUsed: updatedList\r\n    })\r\n\r\n    setFormValidation({ ...formValidation, VotingEquipmentUsed: false })\r\n\r\n  }\r\n\r\n\r\n  const handleHourInput = (e) => {\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      TotalTime: e.target.value\r\n    })\r\n    setFormValidation({ ...formValidation, TotalTime: false })\r\n  }\r\n\r\n  const handleCostInput = (e) => {\r\n    console.log('costhandle', e.target.value)\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      CostOfCount: e.target.value\r\n    })\r\n    setFormValidation({ ...formValidation, CostOfCount: false })\r\n  }\r\n\r\n  const handleRadio = (e) => {\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      HumanOrMachineError: e.target.value\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const handleExplanation = (e) => {\r\n    console.log(e.target.value)\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      DifferenceExplanation: e.target.value\r\n    })\r\n\r\n    setFormValidation({ ...formValidation, DifferenceExplanation: false })\r\n\r\n  }\r\n\r\n  const handlePeople = (e) => {\r\n    console.log(e.target.value)\r\n    setFormValidation({ ...formValidation, PeoplePartyCounting: false })\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      PeoplePartyCounting: e.target.value\r\n    })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    let DifferenceList = candidateData.map(a => a.DifferenceInCount);\r\n    let hasDifference = DifferenceList.some(item => item !== 0)\r\n\r\n\r\n    hasDifference ? setShowExplanation(true) : setShowExplanation(false)\r\n\r\n\r\n    console.log('showExplanation', showExplanation)\r\n    console.log('candidate data', candidateData)\r\n\r\n  }, [candidateData]);\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n\r\n    console.log(props.userData.CountyId)\r\n    let countyID = props.userData.CountyId;\r\n    let SampleID = 1\r\n    getdataByCountyandsample(countyID, SampleID);\r\n    getCandidateByCountyandsample(countyID, SampleID);\r\n    console.log(sampleDetail.sampleId)\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  //Style\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    outerColumn: {\r\n      borderRight: \"1px solid grey\",\r\n      borderBottom: \"1px solid grey\",\r\n      borderLeft: \"1px solid grey\"\r\n    },\r\n    bigTitle: {\r\n      textAlign: \"center\",\r\n      fontSize: 30,\r\n      color: \"blue\",\r\n      fontWeight: 800,\r\n      margin: 5,\r\n      padding: 5,\r\n    },\r\n    title: {\r\n      textAlign: \"center\",\r\n      fontSize: 15,\r\n      color: \"blue\",\r\n      fontWeight: 600,\r\n      margin: 0,\r\n      marginBottom: 5,\r\n      padding: 0,\r\n    },\r\n    error: {\r\n      textAlign: \"center\",\r\n      fontSize: 18,\r\n      color: \"red\",\r\n      fontWeight: 600,\r\n      margin: 0,\r\n      marginBottom: 5,\r\n      padding: 0,\r\n    },\r\n    text: {\r\n      //textAlign: \"left\",\r\n      fontSize: 13,\r\n      color: \"blue\",\r\n      fontWeight: 500,\r\n      //margin: 1,\r\n      //marginBottom: 5,\r\n      paddingTop: 10,\r\n      paddingLeft: 50\r\n    },\r\n    textBox: {\r\n      paddingTop: 6,\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(0),\r\n        width: '100%',\r\n      },\r\n\r\n    },\r\n    formBox: {\r\n      border: \"1px solid grey\",\r\n      // margin: 20\r\n\r\n    },\r\n    entireForm: {\r\n      paddingTop: 30,\r\n      paddingLeft: '10%',\r\n      paddingRight: '10%',\r\n      paddingBottom: 50,\r\n    },\r\n    VotingEquipmentUsed: {\r\n      paddingLeft: 15\r\n\r\n    },\r\n    cost: {\r\n      padding: 15,\r\n\r\n\r\n    },\r\n    costInput: {\r\n      paddingLeft: 30\r\n\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n      '& p': {\r\n        color: 'red',\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  const defaultProps = {\r\n    bgcolor: 'background.paper',\r\n    // color: 'blue',\r\n    m: 1,\r\n    style: { width: '80%', height: \"15vw\" },\r\n    borderColor: 'text.primary',\r\n  };\r\n\r\n   \r\n\r\n  //for alertDialog\r\n  const [alertDialog, setAlertDialog ]= useState(false)\r\n\r\n  const handleClickOpen = ()=>{\r\n    setAlertDialog(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAlertDialog(false)\r\n  };\r\n\r\n\r\n  const handleAgree = () => {\r\n    console.log(\"I agree!\");\r\n    \r\n  };\r\n\r\n  const handleDisagree = () => {\r\n    console.log(\"I do not agree.\");\r\n\r\n  };\r\n\r\n  const renderer = ({   seconds }) => {\r\n    return (\r\n      <span>\r\n      Automatically logout in {seconds} Seconds.\r\n      </span>\r\n    )\r\n  };\r\n\r\n  \r\n\r\n  const clickFunction = () => {\r\n    console.log('sampleDetail', sampleDetail)\r\n    console.log('candidateData', candidateData)\r\n    //console.log('sampleDetail.CostOfCount', sampleDetail.CostOfCount)\r\n  }\r\n\r\n\r\n  return (\r\n\r\n\r\n    \r\n    <Grid container className={classes.entireForm} spacing={2} >\r\n\r\n\r\n      <Grid container item justifyContent='center' >\r\n        {title}\r\n\r\n        <button onClick={handleClickOpen}> click</button>\r\n\r\n        <button onClick={clickFunction}> click2</button>\r\n\r\n\r\n        {/* how to click and show component? */}\r\n\r\n        {/* <AlertDialog/> */}\r\n\r\n        <Dialog\r\n        open={alertDialog}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Your login expried.\"}\r\n        </DialogTitle>\r\n\r\n\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Do you want to stay login?\r\n          </DialogContentText>\r\n\r\n          <Countdown date={Date.now() + 3000}\r\n        renderer={renderer}\r\n        onComplete = {handleClose}\r\n        >\r\n       </Countdown>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDisagree} color=\"primary\">\r\n            Logout\r\n          </Button>\r\n          <Button onClick={handleAgree} color=\"primary\" autoFocus>\r\n            Stay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Grid>\r\n\r\n      <Grid container justifyContent='center' spacing={1}>\r\n        {/* <FormControl component=\"fieldset\"> */}\r\n        {/* <FormLabel component=\"legend\">Sample</FormLabel> */}\r\n        {/* <Grid item xs={3}>Sample</Grid> */}\r\n        {/* <RadioGroup aria-label=\"gender\" name=\"gender1\" value={sampleDetail.sampleId} onChange={handleRadioButton}> */}\r\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={sampleDetail.SampleID} onChange={handleRadioButton} row>\r\n          {/* <Grid item ><FormControlLabel value='1' control={<Radio />} label=\"Sample One\" /></Grid> */}\r\n          <Box border={3} borderColor={label.label1Color} borderRadius={16} component=\"span\" m={1} p={0} pr={1} pl={1}>\r\n            <FormControlLabel value='1' control={<Radio />} label={<span style={{ fontSize: '120%' }}>Sample One</span>} />\r\n\r\n          </Box>\r\n          <Box border={3} borderColor={label.label2Color} borderRadius={16} component=\"span\" m={1} p={0} pr={1} pl={1}>\r\n            <FormControlLabel value='2' control={<Radio />} label={<span style={{ fontSize: '120%' }}>Sample Two</span>} />\r\n          </Box>\r\n        </RadioGroup>\r\n        {/* </FormControl> */}\r\n\r\n      </Grid>\r\n\r\n\r\n      <Grid container item spacing={0} justifyContent='space-between' alignItems='stretch'>\r\n\r\n        <Grid item xs >\r\n          <Cards cardName={'County'} CardValue={sampleDetail.CountyName} />\r\n        </Grid>\r\n\r\n        <Grid item xs >\r\n          <Cards cardName={'Election Date'} CardValue={sampleDetail.ElectionDate.toString().substring(0, 10)} />\r\n        </Grid>\r\n        <Grid item xs >\r\n          <Cards cardName={'Contest Name'} CardValue={sampleDetail.ContestName} />\r\n        </Grid>\r\n        <Grid item xs >\r\n          <Cards cardName={'Type Of Sample'} CardValue={sampleDetail.TypeOfSample} />\r\n        </Grid>\r\n        <Grid item xs >\r\n          <Cards cardName={'Site Name'} CardValue={sampleDetail.PrecinctSiteName} />\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n      {/* <Grid container item spacing={10} justifyContent='center'>\r\n        <Grid item xs={12} spacing={10}>\r\n          <SimplePaper></SimplePaper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      {/* form starts here */}\r\n      <Grid container item spacing={0} justifyContent='center'>\r\n\r\n\r\n        <Box border={1} padding={2}>\r\n          <Grid container spacing={2} justifyContent='center'>\r\n            <Grid item xs={12} className={classes.bigTitle}>\r\n              Sample Audit Form\r\n            </Grid>\r\n\r\n            <Grid container item xs={12}>\r\n\r\n\r\n              <Grid item xs={6} style={{ border: \"1px solid grey\" }}>\r\n                <Typography className={classes.title}>Select date and time</Typography>\r\n                <DatePickers onDateChange={handleDateChange} onTimeChange={handleTimeChange}\r\n                  selectedDate={sampleDetail.DateOfCount} selectedTime={sampleDetail.TimeOfCount}\r\n                  formValidation={formValidation} />\r\n              </Grid>\r\n\r\n              <Grid item xs={6} className={classes.VotingEquipmentUsed} style={{ border: \"1px solid grey\" }}>\r\n                <FormControl error={formValidation.VotingEquipmentUsed}>\r\n                  <FormLabel ><Typography className={classes.title}>Voting equipment used for this sample</Typography></FormLabel>\r\n\r\n                  <CheckboxLabels\r\n                    onCheckBoxChange={handleCheckbox}\r\n                    list={sampleDetail.VotingEquipmentUsed}>\r\n                  </CheckboxLabels>\r\n\r\n                  <FormHelperText>{formValidation.VotingEquipmentUsed ? 'Required' : ''}</FormHelperText>\r\n                </FormControl>\r\n\r\n\r\n              </Grid>\r\n\r\n              <Grid container item xs={6} style={{ border: \"1px solid grey\" }} className={classes.cost} >\r\n                <Grid item>\r\n                  <Typography className={classes.title}>Time necessary to complete this count (not BOTH counts)</Typography>\r\n                </Grid>\r\n\r\n                <Grid item className={classes.costInput}>\r\n                  <TextField\r\n                    InputProps={{\r\n                      startAdornment: <InputAdornment position=\"start\">Hr</InputAdornment>,\r\n                      inputProps: { min: 0, max: 30 },\r\n                    }}\r\n                    //required\r\n                    type=\"number\"\r\n                    id=\"filled-required\"\r\n                    value={sampleDetail.TotalTime}\r\n\r\n\r\n                    //variant=\"filled\"\r\n                    onChange={handleHourInput}\r\n                    error={formValidation.TotalTime}\r\n                    helperText={formValidation.TotalTime ? 'Required' : ''}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container item xs={6} style={{ border: \"1px solid grey\" }} className={classes.cost} >\r\n                <Grid item className={classes.title}>\r\n                  <Typography className={classes.title}> Cost or estimated cost of this count (not BOTH counts)</Typography>\r\n                </Grid>\r\n\r\n                <Grid item className={classes.costInput}  >\r\n                  <TextField\r\n                    InputProps={{\r\n                      startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                      inputProps: { min: 0, max: 99999 },\r\n                    }}\r\n                    //required\r\n                    type=\"number\"\r\n                    id=\"filled-required\"\r\n\r\n                    value={sampleDetail.CostOfCount}\r\n\r\n                    //variant=\"filled\"\r\n                    onChange={handleCostInput}\r\n                    error={formValidation.CostOfCount}\r\n                    helperText={formValidation.CostOfCount ? 'Required' : ''}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n\r\n              <MaterialTable\r\n                title=\"Enter counts for each candidates\"\r\n                title={formValidation.CandidatesCounts ?\r\n                  <Typography className={classes.error}>Every candidate counts is required</Typography>\r\n                  : \"Enter counts for each candidates\"}\r\n                columns={columns}\r\n                data={candidateData}\r\n                icons={tableIcons}\r\n\r\n                options={{\r\n                  search: false,\r\n                  paging: false,\r\n                  sorting: false,\r\n                  actionsColumnIndex: -1,\r\n\r\n                }}\r\n\r\n                style={formValidation.CandidatesCounts && { border: '2px solid red' }}\r\n\r\n                editable={{\r\n                  onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\r\n\r\n                    setFormValidation({ ...formValidation, CandidatesCounts: false })\r\n                    //Backend call\r\n                    let canId = oldData.SampleCandidateId\r\n                    //let putbody = JSON.stringify(newData)\r\n\r\n                    let DifferenceInCount = Math.abs(parseInt(newData.Machine) - parseInt(newData.HandToEye))\r\n                    // DifferenceInCount == 0 ? setShowExplanation('none') : setShowExplanation('block');\r\n\r\n                    let putbody = {\r\n                      \"SampleCandidateId\": newData.SampleCandidateId,\r\n                      \"CandidateName\": newData.CandidateName,\r\n                      \"Machine\": newData.Machine,\r\n                      \"HandToEye\": newData.HandToEye,\r\n                      \"DifferenceInCount\": DifferenceInCount\r\n                    }\r\n                    console.log(putbody);\r\n                    //Promise.then() takes two arguments, a callback for success and another for failure.\r\n                    //Both are optional, so you can add a callback for success or failure only.\r\n                    // here response can be any word \r\n                    updateCandidate(newData, canId, putbody).then(response => {\r\n                      console.log(response)\r\n                      resolve()\r\n                    });\r\n\r\n                    // axios.put(`http://localhost:4000/updateCandidate/${canId}`, putbody)\r\n                    // .then((response, rejct) => {\r\n                    //   let updateDate = candidateData\r\n                    //   let objIndex = updateDate.findIndex(( obj => obj.CandidateId == newData.CandidateId));     \r\n                    //   updateDate[objIndex].Machine = newData.Machine\r\n                    //   updateDate[objIndex].HandToEye = newData.HandToEye\r\n                    //   updateDate[objIndex].DifferenceInCount = newData.DifferenceInCount\r\n                    //   setCandidateData(updateDate)\r\n\r\n                    // resolve()\r\n\r\n                    // });\r\n                    // //why resolve here. will not wait for axios and we since it is a promise we need to excute the resolce. \r\n                    // or we can do somthing like resolve('done') but we don't know what material table is going to do with this resolve. \r\n\r\n                    // //resolve()\r\n                  }),\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid Container item xs={12} justifyContent='center' spacing={5}>\r\n              {/* <Collapse in={showExplanation} timeout={1500}>\r\n                <Fade in={showExplanation} timeout={500}> */}\r\n\r\n              <Collapse in={true} timeout={1000} justifyContent='center'>\r\n                <Fade in={true} timeout={1000} justifyContent='center'>\r\n\r\n                  <Grid container justifyContent='center'\r\n                    style={formValidation.DifferenceExplanation && { border: '2px solid red' }}>\r\n                    <Grid item className={classes.title}>\r\n                      <Typography className={classes.title}>Explanation of any difference (skip this section if there was no difference in any totals)</Typography>\r\n                      {/* error={formValidation.PeoplePartyCounting}\r\n                  helperText={formValidation.PeoplePartyCounting ? 'Required' : ' '} */}\r\n                    </Grid>\r\n\r\n\r\n                    <Grid container item xs={12} justifyContent='center' style={{ border: \"1px solid grey\" }} >\r\n                      <Grid item xs={8} className={classes.text} justifyContent='center'>\r\n                        <Typography className={classes.title}>If there is a difference, is it attributable to machine error or human error?</Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={4} justifyContent='center'>\r\n                        <RadioGroup row onChange={handleRadio}    value= {String(sampleDetail.HumanOrMachineError)}>\r\n\r\n                          <FormControlLabel value=\"Machine\" control={<Radio />} label=\"Machine error\" />\r\n                          <FormControlLabel value=\"Human\" control={<Radio />} label=\"Human error\" />\r\n                        </RadioGroup>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n\r\n\r\n                    <Grid item xs={12} className={classes.textBox}>\r\n\r\n                    <Grid item xs={12} className={classes.title}>\r\n                <Typography className={classes.title}>Detailed explanation of what caused the difference</Typography>\r\n\r\n              </Grid>\r\n                      <form noValidate autoComplete=\"on\">\r\n\r\n                        <TextField\r\n                          id=\"outlined-multiline-static\"\r\n                          // label=\"Detailed explanation of what caused the difference\"\r\n                          multiline\r\n                          rows={5}\r\n                          value = {sampleDetail.DifferenceExplanation}\r\n                          defaultValue= ''\r\n                          variant=\"outlined\"\r\n                          onChange={handleExplanation}\r\n                        />\r\n\r\n                      </form>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </Fade>\r\n              </Collapse>\r\n            </Grid>\r\n\r\n            <Grid Container item xs={12} justifyContent='center' spacing={5}>\r\n\r\n              <Grid item xs={12} className={classes.title}>\r\n                <Typography className={classes.title}>Who conducted the count (must consist of multiple persons of different party affiliation)</Typography>\r\n\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className={classes.textBox}>\r\n                <TextField\r\n\r\n                  id=\"outlined-multiline-static\"\r\n                  //label=\"Name, Party affiliation;\"\r\n                  multiline\r\n                  rows={5}\r\n                  //defaultValue={sampleDetail.PeoplePartyCounting}\r\n                  value={sampleDetail.PeoplePartyCounting}\r\n                  variant=\"outlined\"\r\n                  onChange={handlePeople}\r\n\r\n\r\n                  //className={classes.textField}\r\n                  error={formValidation.PeoplePartyCounting}\r\n                  helperText={formValidation.PeoplePartyCounting ? 'Required' : ' '}\r\n                />\r\n              </Grid>\r\n\r\n\r\n            </Grid>\r\n\r\n\r\n\r\n            {/* <Collapse in={hasError()} timeout={1500}>\r\n              <Fade in={hasError()} timeout={500}>\r\n                <Grid container item xs={12} justifyContent='center' >\r\n                  Please filled out required\r\n                </Grid>\r\n              </Fade>\r\n            </Collapse> */}\r\n\r\n            <Grid item spacing={12} justifyContent='center'>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleSubmit}\r\n                disabled={formInfoSubmitted}\r\n              >\r\n                {\r\n                  (formInfoSubmitted && 'Your form is submitted!')\r\n                  || (!formInfoSubmitted && 'Submit')\r\n\r\n                }\r\n              </Button>\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n        </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AuditForm;\r\n","import axios from \"axios\";\r\n\r\nexport const authenticateUser = async (email, password)=>{\r\n    console.log(email, password)\r\n\r\n    const response = await axios.get(\r\n        `http://localhost:4000/auth/${email}/${password}`\r\n      );\r\n\r\n      if (response.data === \"User not found\"){\r\n        return \"Email not in the system\"\r\n      }else{\r\n        let userData = await response.data;\r\n\r\n        return userData;\r\n\r\n      }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useState } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n\r\n\r\nimport { authenticateUser } from './api';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://www.ncsbe.gov/\">\r\n        NCSBE\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper2: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[1],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function LoginPage(props) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const history = useHistory();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const handleEmail = (e) => {\r\n    console.log(e.target.value)\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleLogin = async () => {\r\n    //get data through API and vrify login\r\n    if (!email) { alert(\"please enter email\") }\r\n    if (!password) { alert(\"please enter password\") }\r\n\r\n\r\n    const userData = await authenticateUser(email, password);\r\n\r\n    if (userData === \"Email not in the system\") {\r\n      alert(userData)\r\n    }\r\n    else if (userData === \"login fail\") {\r\n      alert(\"Wrong Password\")\r\n    }\r\n    else {\r\n      //Successful login\r\n\r\n      \r\n      if (userData.IsDefault === 'True') {\r\n        props.onUserAuthenticated(\r\n          //webUserId: userData.WebUserId\r\n          userData\r\n        );\r\n\r\n\r\n\r\n        history.push('/change-password')\r\n      } else {\r\n        console.log(userData.CountyId)\r\n      \r\n        props.onUserAuthenticated(\r\n          //webUserId: userData.WebUserId\r\n          userData\r\n        );\r\n        history.push('/audit-form')\r\n      }\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nreturn (\r\n  <Container component=\"main\" maxWidth=\"xs\">\r\n    <CssBaseline />\r\n    <div className={classes.paper}>\r\n      <Avatar className={classes.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Sign in\r\n      </Typography>\r\n      <form className={classes.form} Validate>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          onChange={handleEmail}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n          onChange={handlePassword}\r\n        />\r\n \r\n        <Button\r\n          type=\"button\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          onClick={handleLogin}\r\n\r\n        >\r\n          Sign In\r\n        </Button>\r\n        <Grid container justifyContent=\"flex-end\">\r\n          <Grid item type=\"button\" onClick={handleOpen}>\r\n            <Link href=\"#\" variant=\"body2\">\r\n            Forgot password?\r\n            </Link>\r\n\r\n            {/* <button type=\"button\" onClick={handleOpen}>\r\n            Forgot password?\r\n            </button> */}\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </form>\r\n\r\n\r\n    </div>\r\n    <Modal\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        // closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper2}>\r\n            <h2 >Forget Password?</h2>\r\n            <p >Please send a help desk ticket to </p>\r\n            <p >helpdesk@ncsbe.gov</p>\r\n            <p >to rest your password </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    <Box mt={8}>\r\n      <Copyright />\r\n    </Box>\r\n  </Container>\r\n);\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"axios\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://www.ncsbe.gov/\">\r\n        NCSBE\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nconst updatePassword = async (webUserId, password) => {\r\n  //console.log('updatFunction', putbody);\r\n  let putbody = {\r\n    \"WebUserId\": webUserId,\r\n    \"UserPassword\": password\r\n  }\r\n  const res = await axios.put(`http://localhost:4000/auth/updateWebUser`, putbody);\r\n}\r\n\r\n\r\n\r\nexport default function ChargePassword(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [newPassword, setNewPassword] = useState();\r\n  const [confirmPassword, setConfirmPassword] = useState();\r\n  const [webUserId, setWebUserId] = useState();\r\n\r\n  //setWebUserId(props.userData.WebUserId)\r\n\r\n  const handleNew = (e) => {\r\n    setNewPassword(e.target.value)\r\n  }\r\n\r\n  const handleConfirm = (e) => {\r\n    setConfirmPassword(e.target.value)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setWebUserId(props.userData.WebUserId)\r\n\r\n  }, []);\r\n\r\n\r\n  const handleChangePassword = () => {\r\n    //ev.preventDefault()\r\n    if (newPassword === confirmPassword) {\r\n      //props.onPasswordChanged();\r\n      //console.log(props.userData.WebUserId) \r\n      updatePassword(webUserId, newPassword)\r\n\r\n      history.push('/login');\r\n    } else {\r\n      alert(\"Passwords don't match\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Change Password\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"New Password\"\r\n            label=\"New Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleNew}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"Confirm Password\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleConfirm}\r\n          />\r\n\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleChangePassword}\r\n          >\r\n            Change Password\r\n          </Button>\r\n\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from \"react\";\nimport { useState } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport \"./styles.css\";\nimport AuditForm from \"./AuditForm\";\nimport LoginPage from \"./LoginPage\";\nimport ChangePassword from \"./ChangePassword\";\nimport Cookies from 'js-cookie';\nimport { setLoginCookies } from './loginCookies';\n \nfunction initUserData (){\n  const userDataCookies = Cookies.get('userData')\n\n  return userDataCookies === undefined ? {} : JSON.parse(userDataCookies)\n}\n\nconst App = () => {\n  const [userData, setUserData] = useState(initUserData());\n\n  console.log('user data',userData)\n  const handleUserAuthenticated =(userData)=>{\n    // console.log(userData);\n    setUserData(userData);\n    setLoginCookies(userData);\n  }\n\n\n\n  const handleLogout = ()=>{\n    setUserData({});\n    Cookies.remove('userData')\n\n  }\n\n  return (\n    <Router>   \n      <div>\n        <nav>\n          <ul>\n            {/* <li>\n              <Link to=\"/\">Home</Link>\n            </li> */}\n            <li>\n              {userData.IsDefault === \"False\" && <Link to=\"/audit-form\">Audit Form</Link> }\n            </li>\n            <li>\n              {userData.IsDefault === \"False\"? <Link to=\"/logout\" onClick={handleLogout}>Logout</Link>:<Link to=\"/login\">Login</Link>}\n            </li>\n            <li>\n            <a href='http://localhost:4000/files/User-Manual.docx' download>User-Manual</a>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/login\">\n            <LoginPage onUserAuthenticated = {handleUserAuthenticated} />\n          </Route>\n          {/* {hasCookiesExpired() && <Redirect to  = \"/login\" />  } */}\n          <Route path=\"/change-password\">\n            <ChangePassword userData = {userData}/>\n          </Route>\n          <Route exact path={\"/audit-form\"}  >\n            <AuditForm userData = {userData}/>\n          </Route>\n          <Route path= \"/\">\n            <LoginPage onUserAuthenticated = {handleUserAuthenticated} />\n          </Route>\n        </Switch>\n\n      </div>\n    \n   </Router>\n\n\n\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  \n      <App />\n  \n,\n  rootElement\n);"],"sourceRoot":""}