{"version":3,"sources":["components/timepicker.js","components/checkboxs.js","components/infoCards.js","components/simplePaper.js","loginCookies.js","components/alertDialog.js","AuditForm/AuditForm.js","LoginPage/api.js","LoginPage/LoginPage.js","ChangePassword/ChangePassword.js","App.js","index.js"],"names":["DatePickers","props","MuiPickersUtilsProvider","utils","DateFnsUtils","Grid","container","justifyContent","id","label","format","value","selectedDate","onChange","onDateChange","KeyboardButtonProps","error","formValidation","DateOfCount","helperText","selectedTime","onTimeChange","TimeOfCount","CheckboxLabels","votingArray","String","list","split","FormGroup","row","FormControlLabel","control","Checkbox","checked","includes","onCheckBoxChange","name","color","useStyles","makeStyles","root","minWidth","margin","padding","textAlign","align","minHeight","height","title","fontSize","pos","SimpleCard","classes","Card","className","variant","CardContent","Typography","cardName","CardValue","theme","width","marginTop","text","cookieIntervalId","clearCookiesInterval","clearInterval","useLoginCookiesTimer","userData","onOpenAlertDialog","useHistory","setInterval","console","log","Cookies","get","undefined","setLoginCookies","set","JSON","stringify","expires","AlertDialog","history","useState","handleLogout","replace","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","date","Date","now","renderer","seconds","onComplete","DialogActions","Button","onClick","handleClose","autoFocus","domain","AuditForm","alertDialog","setAlertDialog","React","CountyId","SampleID","ElectionDate","CountyName","ContestName","TypeOfSample","PrecinctSiteName","CandidateName1","CandidateName2","sampleDetail","setSampleDetail","showExplanation","setShowExplanation","VotingEquipmentUsed","TotalTime","CostOfCount","PeoplePartyCounting","HumanOrMachineError","DifferenceExplanation","CandidatesCounts","setFormValidation","candidateData","setCandidateData","formInfoSubmitted","setFormInfoSubmitted","label1","label2","label1Color","label2Color","setLabel","getdataByCountyandsample","countyId","sampleId","a","axios","response","data","dateOfCount","slice","Number","VotingArray","SampleId","toString","getCandidateByCountyandsample","updateCandidate","newData","canId","putbody","put","updateData","objIndex","findIndex","obj","SampleCandidateId","CandidateName","Machine","parseInt","HandToEye","DifferenceInCount","Math","abs","updateSample","tableIcons","Edit","forwardRef","ref","Clear","Check","useEffect","hasDifference","map","some","item","countyID","formControl","spacing","selectEmpty","outerColumn","borderRight","borderBottom","borderLeft","bigTitle","fontWeight","marginBottom","paddingTop","paddingLeft","textBox","formBox","border","entireForm","paddingRight","paddingBottom","cost","costInput","textField","marginLeft","marginRight","RadioGroup","aria-label","e","target","Box","borderColor","borderRadius","component","m","p","pr","pl","Radio","style","alignItems","xs","substring","time","NewTime","toLocaleString","timeZone","FormControl","FormLabel","event","updatedList","push","filter","FormHelperText","TextField","InputProps","startAdornment","InputAdornment","position","inputProps","min","max","type","field","editable","search","paging","sorting","actionsColumnIndex","onRowUpdate","oldData","Promise","resolve","reject","then","Container","Collapse","in","timeout","Fade","noValidate","autoComplete","multiline","rows","defaultValue","newFormValidation","length","HandToEyeIsZero","MachineIsZero","objs","trueCount","key","labeltochange","catch","message","alert","disabled","authenticateUser","email","password","Copyright","Link","href","getFullYear","paper","display","flexDirection","avatar","backgroundColor","palette","secondary","main","form","submit","modal","paper2","background","boxShadow","shadows","LoginPage","setEmail","setPassword","setOpen","handleLogin","IsDefault","onUserAuthenticated","maxWidth","CssBaseline","Avatar","Validate","required","fullWidth","Modal","BackdropComponent","Backdrop","BackdropProps","mt","updatePassword","webUserId","ChargePassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","setWebUserId","WebUserId","Logout","onLogout","App","userDataCookies","parse","initUserData","setUserData","handleUserAuthenticated","to","download","exact","path","remove","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.00d71e64.chunk.js","sourcesContent":["import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { parseISO } from 'date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport { convertToLocalTime } from 'date-fns-timezone';\r\n\r\n\r\n\r\n\r\n\r\nexport default function DatePickers(props) {\r\n\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Grid container justifyContent=\"space-around\">\r\n        <KeyboardDatePicker\r\n          //margin=\"small\"  \r\n          id=\"date-picker-dialog\"\r\n          label=\"Select Date of count\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={props.selectedDate}\r\n          onChange={props.onDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n          error ={props.formValidation.DateOfCount}\r\n          helperText = { props.formValidation.DateOfCount ?'Required':''}\r\n        />\r\n        <KeyboardTimePicker\r\n          //margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Select Time of count\"\r\n          value={props.selectedTime}\r\n          onChange={props.onTimeChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n          error ={props.formValidation.TimeOfCount}\r\n          helperText = { props.formValidation.TimeOfCount ?'Required':''}\r\n        />\r\n\r\n        </Grid>\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n\r\n ","import React, { useEffect } from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nexport default function CheckboxLabels(props) {\r\n//   const [state, setState] = React.useState({\r\n//     id:'3',\r\n//     VotingEquipmentUsed: []\r\n\r\n//   })\r\n  \r\n\r\n//   const handleChange = (event) => {\r\n//     let updatedList = state.VotingEquipmentUsed\r\n//     if (event.target.checked){\r\n//         updatedList.push(event.target.name)\r\n     \r\n//         }\r\n//     else{\r\n//         console.log('false', event.target.name)\r\n//         updatedList = updatedList.filter(e => e !== event.target.name)\r\n//         console.log('updatedList', updatedList)\r\n//     }\r\n    \r\n//     setState({VotingEquipmentUsed: updatedList})\r\n    \r\n//     }\r\n    \r\n//     useEffect(() => {\r\n        \r\n//         console.log('checkboxstate', state.VotingEquipmentUsed)\r\n//       }, [state]);\r\n\r\n// console.log(props.list)\r\n// console.log(typeof(props.list))\r\nconst votingArray = String(props.list).split(',')\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n          \r\n            checked={votingArray.includes(\"M100_tabulator\")}\r\n            onChange={props.onCheckBoxChange}\r\n            name=\"M100_tabulator\"\r\n            color=\"primary\"\r\n          />\r\n          \r\n        }\r\n        label=\"M100 tabulator\"\r\n      />\r\n    <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={votingArray.includes(\"DS200_tabulator\")}\r\n            onChange={props.onCheckBoxChange}\r\n            name=\"DS200_tabulator\"\r\n            color=\"primary\"\r\n          />\r\n          \r\n        }\r\n        label=\"DS200 tabulator\"\r\n      />\r\n\r\n    <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={votingArray.includes(\"D650_central_tabulator\")}\r\n            onChange={props.onCheckBoxChange}\r\n            name=\"D650_central_tabulator\"\r\n            color=\"primary\"\r\n          />\r\n          \r\n        }\r\n        label=\"D650 central tabulator\"\r\n      />\r\n\r\n    <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={votingArray.includes(\"DS_850_central_tabulator\")}\r\n            onChange={props.onCheckBoxChange}\r\n            name=\"DS_850_central_tabulator\"\r\n            color=\"primary\"\r\n          />\r\n          \r\n        }\r\n        label=\"DS 850 central tabulator\"\r\n      />\r\n\r\n    <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n          checked={votingArray.includes(\"iVotronic_touchscreen_machines\")}\r\n            onChange={props.onCheckBoxChange}\r\n            name=\"iVotronic_touchscreen_machines\"\r\n            color=\"primary\"\r\n          />\r\n          \r\n        }\r\n        label=\"iVotronic touchscreen machines\"\r\n      />    \r\n    \r\n    </FormGroup>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 70,\r\n    margin: 0,\r\n    padding:0,\r\n    textAlign: \"center\",\r\n    align: \"center\",\r\n    minHeight: 5,\r\n    height: '100%'\r\n\r\n  },\r\n\r\n  title: {\r\n    fontSize: 14,\r\n    margin: 0,\r\n    padding:0,\r\n  },\r\n  pos: {\r\n    margin: 0,\r\n    padding:0,\r\n  },\r\n});\r\n\r\nexport default function SimpleCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} >\r\n          {props.cardName}\r\n        </Typography>\r\n\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          {props.CardValue || 'N\\A'}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display: 'flex',\r\n    width: '100%'\r\n  },\r\n  title:{\r\n    fontSize: 20,\r\n    margin: 1,\r\n    marginTop:10,\r\n    padding:1,\r\n    textAlign: \"center\",\r\n\r\n  },\r\n  text:{\r\n    margin: 10\r\n\r\n  }\r\n}));\r\n\r\nexport default function SimplePaper() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Paper elevation={1}>\r\n      <Typography className={classes.title} >\r\n          Please Filled Out Following Form \r\n        </Typography>\r\n        <Grid item className={classes.text}>\r\n        Remember that the sample audit count is a test to show that the election equipment worked properly. If the hand count is different than the machine count, that difference must be explained. However, a difference in the count does NOT change election results.\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import Cookies from 'js-cookie';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst hasCookiesExpired =()=> Cookies.get('userData') === undefined;\r\n\r\nlet cookieIntervalId = null;\r\n\r\nexport function clearCookiesInterval() {\r\n  if (cookieIntervalId !== null) {\r\n    clearInterval(cookieIntervalId);\r\n    cookieIntervalId = null;\r\n  }\r\n}\r\n\r\nexport function useLoginCookiesTimer(userData, onOpenAlertDialog) {\r\n  const history = useHistory();\r\n  clearCookiesInterval();\r\n\r\n  cookieIntervalId = setInterval(() => {\r\n    console.log('timer', Cookies.get('userData'))\r\n    if (hasCookiesExpired()) {\r\n      onOpenAlertDialog();\r\n      \r\n    }\r\n  }, 2000)\r\n}\r\n\r\nexport function setLoginCookies(userData) {\r\n  //const in30Minutes = 1/48\r\n  //const in30Minutes = 3/86400;\r\n  const in30Minutes = 1/2\r\n  console.log('stay', userData)\r\n  Cookies.set('userData', JSON.stringify(userData), {\r\n      expires: in30Minutes\r\n  });\r\n}","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Countdown from 'react-countdown';\r\nimport { useHistory } from \"react-router\";\r\nimport { setLoginCookies } from \"../loginCookies\";\r\n\r\n\r\n\r\nexport default function AlertDialog(props){\r\n    const history = useHistory();\r\n   \r\n    const [close, setClose] = useState('true')\r\n\r\n \r\n  \r\n    const handleLogout = () => {\r\n        //props.onclose()\r\n        \r\n        history.replace('/logout')\r\n    };\r\n  \r\n  \r\n    const handleStay = () => {\r\n        setLoginCookies(props.userData)\r\n        setClose('false')\r\n      \r\n    };\r\n  \r\n  \r\n    const renderer = ({   seconds }) => {\r\n      return (\r\n        <span>\r\n         Seconds: {seconds}\r\n        </span>\r\n      )\r\n    };\r\n\r\n    return(\r\n\r\n\r\n        <Dialog\r\n        open={props.open}\r\n        onClose={()=>'true'}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Your login expried.\"}\r\n        </DialogTitle>\r\n\r\n\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Do you want to stay login?\r\n          </DialogContentText>\r\n\r\n          <Countdown date={Date.now() + 5000}\r\n        renderer={renderer}\r\n        onComplete = {handleLogout}\r\n        >\r\n       </Countdown>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleLogout} color=\"primary\">\r\n            Logout\r\n          </Button>\r\n          <Button onClick={props.handleClose} color=\"primary\" autoFocus>\r\n            Stay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n}","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, Button, Fade } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { forwardRef } from 'react';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Check from '@material-ui/icons/Check';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\n\r\n//import moment from 'moment-timezone';\r\n\r\n//for dialog\r\n// import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Countdown from 'react-countdown';\r\n\r\n\r\n\r\n//components\r\nimport DatePickers from '../components/timepicker';\r\nimport CheckboxLabels from '../components/checkboxs';\r\nimport Cards from '../components/infoCards';\r\nimport SimplePaper from '../components/simplePaper';\r\nimport { useLoginCookiesTimer } from '../loginCookies';\r\nimport AlertDialog from '../components/alertDialog'\r\n\r\n\r\n//domain\r\n//const domain = 'http://localhost:4000'\r\nconst domain = 'https://sampleaudit.ncsbe.gov'\r\n\r\n\r\nconst AuditForm = (props) => {\r\n  const [alertDialog, setAlertDialog ]= useState(false)\r\n\r\n  \r\n  const handleClickOpen = ()=>{\r\n\r\n    setAlertDialog(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAlertDialog(false)\r\n  };\r\n\r\n  useLoginCookiesTimer(props.userData, handleClickOpen);\r\n\r\n  \r\n\r\n  const emptySampleDetail = {\r\n    CountyId: \"\",\r\n    SampleID: \"\",\r\n    ElectionDate: \"\",\r\n    CountyName: \"\",\r\n    ContestName: \"\",\r\n    TypeOfSample: \"\",\r\n    PrecinctSiteName: \"\",\r\n    CandidateName1: \"\",\r\n    CandidateName2: \"\",\r\n    //to update\r\n    // DateOfCount: null,\r\n    // TimeOfCount: null,//Date.now(),\r\n    // VotingEquipmentUsed: [],\r\n    // HumanOrMachineError: \"\",\r\n    // DifferenceExplanation: \"\",\r\n    // PeoplePartyCounting: \"\",\r\n    // TotalTime: \"\",\r\n    // CostOfCount: \"\"\r\n\r\n  }\r\n\r\n\r\n\r\n  const [sampleDetail, setSampleDetail] = React.useState({\r\n    ...emptySampleDetail\r\n  });\r\n\r\n  const [showExplanation, setShowExplanation] = useState(false)\r\n\r\n\r\n  const [formValidation, setFormValidation] = useState({\r\n    DateOfCount: false,\r\n    TimeOfCount: false,\r\n    VotingEquipmentUsed: false,\r\n    TotalTime: false,\r\n    CostOfCount: false,\r\n    PeoplePartyCounting: false,\r\n    HumanOrMachineError: false,\r\n    DifferenceExplanation: false,\r\n    CandidatesCounts: false,\r\n\r\n  })\r\n\r\n//  const [radioValue, setRadioValue] = useState('Human')\r\n\r\n  const [selectedSampleId, setSelectedSampleId] = useState('');\r\n\r\n  const [candidateData, setCandidateData] = useState([]);\r\n\r\n\r\n  const [formInfoSubmitted, setFormInfoSubmitted] = useState(false)\r\n\r\n  const [submitButtonLabel, setSubmitButtonLabel] = useState('Submit')\r\n\r\n  const [label, setLabel] = useState({\r\n    label1: \"\",\r\n    label2: \" Done\",\r\n    label1Color: \"warning.main\",\r\n    label2Color: \"warning.main\"\r\n\r\n  })\r\n\r\n  //https://sampleaudit.ncsbe.gov/sampleAudit/getDetailByCountySampleId/${countyId}/${sampleId}\r\n  //https://sampleaudit.ncsbe.gov/files/User-Manual.docx\r\n  const getdataByCountyandsample = async (countyId, sampleId) => {\r\n    const response = await axios.get(\r\n      `https://sampleaudit.ncsbe.gov/sampleAudit/getDetailByCountySampleId/${countyId}/${sampleId}`\r\n    );\r\n    let data = await response.data;\r\n    console.log('Sample Data', data)\r\n\r\n    let dateOfCount = String(data.DateOfCount)\r\n    dateOfCount = dateOfCount.slice(0,-1)\r\n\r\n    let TimeOfCount = String(data.TimeOfCount)\r\n    TimeOfCount = TimeOfCount.slice(0,-1)\r\n\r\n\r\n    const CostOfCount = Number(data.CostOfCount)\r\n    const TotalTime = Number(data.TotalTime)\r\n    const VotingArray = data.VotingEquipmentUsed.split(',');\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      CountyId: countyId,\r\n      SampleID: data.SampleId.toString(),\r\n      ElectionDate: data.ElectionDate,\r\n      TypeOfSample: data.TypeOfSample,\r\n      PrecinctSiteName: data.PrecinctSiteName,\r\n      ContestName: data.ContestName,\r\n      CountyName: data.CountyName,\r\n      DateOfCount: dateOfCount,\r\n      TimeOfCount: TimeOfCount,\r\n      VotingEquipmentUsed: VotingArray,\r\n      HumanOrMachineError: data.HumanOrMachineError,\r\n      DifferenceExplanation: data.DifferenceExplanation,\r\n      PeoplePartyCounting: data.PeoplePartyCounting,\r\n      TotalTime: TotalTime,\r\n      CostOfCount: CostOfCount\r\n    });\r\n  };\r\n\r\n  const handleRadioButton = (e) => {\r\n    let CountyId = sampleDetail.CountyId\r\n    let sampleId = e.target.value\r\n    getdataByCountyandsample(CountyId, sampleId)\r\n    getCandidateByCountyandsample(CountyId, sampleId);\r\n  }\r\n\r\n\r\n\r\n  const getCandidateByCountyandsample = async (countyId, sampleId) => {\r\n    try {\r\n      const response = await axios.get(`https://sampleaudit.ncsbe.gov/sampleAudit/getCandidateByCountySampleId/${countyId}/${sampleId}`);\r\n      let data = await response.data;\r\n      setCandidateData(data);\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  };\r\n\r\n\r\n  const updateCandidate = async (newData, canId, putbody) => {\r\n    console.log('putbody', putbody)\r\n    console.log('canId', canId)\r\n    const res = await axios.put(`https://sampleaudit.ncsbe.gov/sampleAudit/updateCandidate`, putbody);\r\n    // console.log(newData)\r\n    // console.log(candidateData)\r\n    let updateData = [...candidateData]\r\n    console.log('updateData', updateData)\r\n    console.log('newData', newData)\r\n    let objIndex = updateData.findIndex((obj => obj.SampleCandidateId == newData.SampleCandidateId));\r\n    updateData[objIndex].CandidateName = newData.CandidateName\r\n    updateData[objIndex].Machine = parseInt(newData.Machine)\r\n    updateData[objIndex].HandToEye = parseInt(newData.HandToEye)\r\n    updateData[objIndex].DifferenceInCount = Math.abs(parseInt(newData.Machine) - parseInt(newData.HandToEye))\r\n    setCandidateData(updateData)\r\n    console.log('candidate update name', updateData)\r\n\r\n  }\r\n\r\n  const updateSample = async (CountyId, SampleID, putbody) => {\r\n    console.log('updatFunction', putbody);\r\n    //const res = await axios.put(`https://sampleaudit.ncsbe.gov/sampleAudit/updateSample`, putbody);\r\n    //http://localhost:4000/sampleAudit/updateSample\r\n    console.log(`${domain}/sampleAudit/updateSample`)\r\n    \r\n    let uri = `${domain}/sampleAudit/updateSample`\r\n    const res = await axios.put(`${domain}/sampleAudit/updateSample`, putbody);\r\n                                \r\n  }\r\n\r\n\r\n\r\n  const hasError = () => {\r\n    let showError = false\r\n    // console.log('formValidation', formValidation)\r\n    // console.log('SampleDetailTrueorNot', !sampleDetail.DateOfCount)\r\n    //showExplanation\r\n    if (showExplanation) {\r\n\r\n      let keyList = [\r\n        'DateOfCount',\r\n        'TimeOfCount',\r\n        'VotingEquipmentUsed',\r\n        'TotalTime',\r\n        'CostOfCount',\r\n        'PeoplePartyCounting'\r\n      ]\r\n\r\n      for (var key in keyList) {\r\n        if (formValidation[key]) showError = true;\r\n      }\r\n\r\n    } else {\r\n\r\n      let keyList = [\r\n        'DateOfCount',\r\n        'TimeOfCount',\r\n        'VotingEquipmentUsed',\r\n        'TotalTime',\r\n        'CostOfCount',\r\n        'PeoplePartyCounting',\r\n        'HumanOrMachineError',\r\n        'DifferenceExplanation'\r\n      ]\r\n\r\n      for (var key in keyList) {\r\n        if (formValidation[key]) showError = true;\r\n      }\r\n    }\r\n\r\n    return showError\r\n\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    let newFormValidation = { ...formValidation };\r\n\r\n    newFormValidation = !sampleDetail.DateOfCount ? { ...newFormValidation, DateOfCount: true } : newFormValidation;\r\n    newFormValidation = !sampleDetail.TimeOfCount ? { ...newFormValidation, TimeOfCount: true } : newFormValidation;\r\n    newFormValidation = sampleDetail.VotingEquipmentUsed.length === 1 ? { ...newFormValidation, VotingEquipmentUsed: true } : newFormValidation;\r\n    newFormValidation = showExplanation && !sampleDetail.HumanOrMachineError ? { ...newFormValidation, HumanOrMachineError: true } : newFormValidation;\r\n    newFormValidation = showExplanation && !sampleDetail.DifferenceExplanation ? { ...newFormValidation, DifferenceExplanation: true } : newFormValidation;\r\n    newFormValidation = !sampleDetail.PeoplePartyCounting ? { ...newFormValidation, PeoplePartyCounting: true } : newFormValidation;\r\n    newFormValidation = !sampleDetail.CostOfCount ? { ...newFormValidation, CostOfCount: true } : newFormValidation;\r\n    newFormValidation = !sampleDetail.TotalTime ? { ...newFormValidation, TotalTime: true } : newFormValidation;\r\n\r\n    let HandToEyeIsZero = candidateData.some(obj => obj.HandToEye != 0)\r\n    let MachineIsZero = candidateData.some(objs => objs.Machine != 0)\r\n\r\n\r\n    newFormValidation = !HandToEyeIsZero && !MachineIsZero ? { ...newFormValidation, CandidatesCounts: true } : newFormValidation;\r\n\r\n    setFormValidation(newFormValidation)\r\n\r\n    // if sampleDetail.DateOfCount \r\n\r\n    //loop throuh every properties in the obj\r\n    console.log('sampleDetail', sampleDetail)\r\n    \r\n    console.log('validation object', newFormValidation)\r\n    let trueCount = 0\r\n\r\n    for (var key in newFormValidation) {\r\n      if (newFormValidation[key]) {\r\n        trueCount += 1\r\n      }\r\n    }\r\n\r\n    //trueCount== 0\r\n    if (trueCount == 0) {\r\n      console.log(sampleDetail.SampleID)\r\n      var labeltochange = 'label' + sampleDetail.SampleID + \"Color\"\r\n      console.log(labeltochange)\r\n      //use square bracket we can pass in string \r\n      setLabel({ ...label, [labeltochange]: \"success.main\" })\r\n\r\n\r\n\r\n      updateSample(sampleDetail.CountyId, sampleDetail.SampleID, sampleDetail)\r\n        .then(response => {\r\n          console.log(response)\r\n          setFormInfoSubmitted(false);\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n\r\n        let message = \"Sample \" + sampleDetail.SampleID + \" submitted\"\r\n      \r\n        alert(message)\r\n\r\n\r\n    } else {\r\n      alert(\"Please fill all required cells\")\r\n     \r\n      \r\n      setFormInfoSubmitted(false)\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  var title = <h1>Sample Audit Record</h1>;\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Candidate Name\", field: \"CandidateName\",\r\n\r\n    },\r\n    {\r\n      title: \"Machine\", field: \"Machine\", type: \"numeric\",\r\n\r\n\r\n\r\n    },\r\n    {\r\n      title: \"Hand-To-Eye\", field: \"HandToEye\", type: \"numeric\",\r\n      //validate: rowData => rowData.year === undefined || rowData.year === \"\" ? \"Required\" : true\r\n      //helperText:'Invalid Email'\r\n\r\n    },\r\n    {\r\n      title: \"Difference In Count\", field: 'DifferenceInCount', editable: 'never', type: \"numeric\",\r\n      //validate: rowData => rowData.fee === undefined || rowData.fee === \"\" ? \"Required\" : true\r\n    }]\r\n\r\n  const tableIcons = {\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Check: forwardRef((props: any, ref: any) => <Check {...props} ref={ref} />),\r\n\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n\r\n    console.log('data of count', date)\r\n\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      DateOfCount: date\r\n\r\n    })\r\n    setFormValidation({ ...formValidation, DateOfCount: false })\r\n  }\r\n\r\n  const handleTimeChange = (time) => {\r\n\r\n    console.log('OG time of count', time)\r\n\r\n    //console.log('dateChange', date)\r\n    const NewTime = time.toLocaleString('en-US', { timeZone: 'America/New_York' })\r\n    console.log('NewTime', NewTime)\r\n\r\n\r\n\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      TimeOfCount: NewTime\r\n\r\n    })\r\n    setFormValidation({ ...formValidation, TimeOfCount: false })\r\n  }\r\n\r\n\r\n  const handleCheckbox = (event) => {\r\n\r\n    let updatedList = sampleDetail.VotingEquipmentUsed;\r\n\r\n\r\n\r\n    if (event.target.checked) {\r\n      updatedList.push(event.target.name)\r\n    }\r\n    else {\r\n      updatedList = updatedList.filter(e => e !== event.target.name)\r\n    }\r\n\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      VotingEquipmentUsed: updatedList\r\n    })\r\n\r\n    setFormValidation({ ...formValidation, VotingEquipmentUsed: false })\r\n\r\n  }\r\n\r\n\r\n  const handleHourInput = (e) => {\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      TotalTime: e.target.value\r\n    })\r\n    setFormValidation({ ...formValidation, TotalTime: false })\r\n  }\r\n\r\n  const handleCostInput = (e) => {\r\n    console.log('costhandle', e.target.value)\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      CostOfCount: e.target.value\r\n    })\r\n    setFormValidation({ ...formValidation, CostOfCount: false })\r\n  }\r\n\r\n  const handleRadio = (e) => {\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      HumanOrMachineError: e.target.value\r\n    })\r\n\r\n    setFormValidation({ ...formValidation, HumanOrMachineError: false })\r\n\r\n  }\r\n\r\n\r\n  const handleExplanation = (e) => {\r\n    console.log(e.target.value)\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      DifferenceExplanation: e.target.value\r\n    })\r\n\r\n    setFormValidation({ ...formValidation, DifferenceExplanation: false })\r\n\r\n  }\r\n\r\n  const handlePeople = (e) => {\r\n    console.log('people value', e.target.value)\r\n    setFormValidation({ ...formValidation, PeoplePartyCounting: false })\r\n    setSampleDetail({\r\n      ...sampleDetail,\r\n      PeoplePartyCounting: e.target.value\r\n    })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    let DifferenceList = candidateData.map(a => a.DifferenceInCount);\r\n    let hasDifference = DifferenceList.some(item => item !== 0)\r\n\r\n\r\n    hasDifference ? setShowExplanation(true) : setShowExplanation(false)\r\n\r\n\r\n    //console.log('showExplanation', showExplanation)\r\n    //console.log('candidate data', candidateData)\r\n\r\n  }, [candidateData]);\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n\r\n    console.log(props.userData.CountyId)\r\n    let countyID = props.userData.CountyId;\r\n    let SampleID = 1\r\n    getdataByCountyandsample(countyID, SampleID);\r\n    getCandidateByCountyandsample(countyID, SampleID);\r\n    console.log(sampleDetail.sampleId)\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  //Style\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    outerColumn: {\r\n      borderRight: \"1px solid grey\",\r\n      borderBottom: \"1px solid grey\",\r\n      borderLeft: \"1px solid grey\"\r\n    },\r\n    bigTitle: {\r\n      textAlign: \"center\",\r\n      fontSize: 30,\r\n      color: \"blue\",\r\n      fontWeight: 800,\r\n      margin: 5,\r\n      padding: 5,\r\n    },\r\n    title: {\r\n      textAlign: \"center\",\r\n      fontSize: 15,\r\n      color: \"blue\",\r\n      fontWeight: 600,\r\n      margin: 0,\r\n      marginBottom: 5,\r\n      padding: 0,\r\n    },\r\n    error: {\r\n      textAlign: \"center\",\r\n      fontSize: 18,\r\n      color: \"red\",\r\n      fontWeight: 600,\r\n      margin: 0,\r\n      marginBottom: 5,\r\n      padding: 0,\r\n    },\r\n    text: {\r\n      //textAlign: \"left\",\r\n      fontSize: 13,\r\n      color: \"blue\",\r\n      fontWeight: 500,\r\n      //margin: 1,\r\n      //marginBottom: 5,\r\n      paddingTop: 10,\r\n      paddingLeft: 50\r\n    },\r\n    textBox: {\r\n      paddingTop: 6,\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(0),\r\n        width: '100%',\r\n      },\r\n\r\n    },\r\n    formBox: {\r\n      border: \"1px solid grey\",\r\n      // margin: 20\r\n\r\n    },\r\n    entireForm: {\r\n      paddingTop: 30,\r\n      paddingLeft: '10%',\r\n      paddingRight: '10%',\r\n      paddingBottom: 50,\r\n    },\r\n    VotingEquipmentUsed: {\r\n      paddingLeft: 15\r\n\r\n    },\r\n    cost: {\r\n      padding: 15,\r\n\r\n\r\n    },\r\n    costInput: {\r\n      paddingLeft: 30\r\n\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n      '& p': {\r\n        color: 'red',\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  const defaultProps = {\r\n    bgcolor: 'background.paper',\r\n    // color: 'blue',\r\n    m: 1,\r\n    style: { width: '80%', height: \"15vw\" },\r\n    borderColor: 'text.primary',\r\n  };\r\n\r\n   \r\n\r\n  const renderer = ({   seconds }) => {\r\n    return (\r\n      <span>\r\n      Automatically logout in {seconds} Seconds.\r\n      </span>\r\n    )\r\n  };\r\n\r\n  \r\n\r\n  const clickFunction = () => {\r\n    console.log('sampleDetail Clicked', sampleDetail)\r\n    console.log('candidateData', candidateData)\r\n    //console.log('sampleDetail.CostOfCount', sampleDetail.CostOfCount)\r\n  }\r\n\r\n\r\n  return (\r\n\r\n\r\n    \r\n    <Grid container className={classes.entireForm} spacing={2} >\r\n\r\n\r\n      <Grid container item justifyContent='center' >\r\n        {title}\r\n\r\n        {/* <button onClick={handleClickOpen}> click</button> */}\r\n\r\n        <button onClick={clickFunction}> click2</button>\r\n\r\n\r\n\r\n\r\n        <AlertDialog open = {alertDialog} userData = {props.userData} handleClose ={handleClose} />\r\n\r\n        \r\n\r\n\r\n      </Grid>\r\n\r\n      <Grid container justifyContent='center' spacing={1}>\r\n        {/* <FormControl component=\"fieldset\"> */}\r\n        {/* <FormLabel component=\"legend\">Sample</FormLabel> */}\r\n        {/* <Grid item xs={3}>Sample</Grid> */}\r\n        {/* <RadioGroup aria-label=\"gender\" name=\"gender1\" value={sampleDetail.sampleId} onChange={handleRadioButton}> */}\r\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={sampleDetail.SampleID} onChange={handleRadioButton} row>\r\n          {/* <Grid item ><FormControlLabel value='1' control={<Radio />} label=\"Sample One\" /></Grid> */}\r\n          <Box border={3} borderColor={label.label1Color} borderRadius={16} component=\"span\" m={1} p={0} pr={1} pl={1}>\r\n            <FormControlLabel value='1' control={<Radio />} label={<span style={{ fontSize: '120%' }}>Sample One</span>} />\r\n\r\n          </Box>\r\n          <Box border={3} borderColor={label.label2Color} borderRadius={16} component=\"span\" m={1} p={0} pr={1} pl={1}>\r\n            <FormControlLabel value='2' control={<Radio />} label={<span style={{ fontSize: '120%' }}>Sample Two</span>} />\r\n          </Box>\r\n        </RadioGroup>\r\n        {/* </FormControl> */}\r\n\r\n      </Grid>\r\n\r\n\r\n      <Grid container item spacing={0} justifyContent='space-between' alignItems='stretch'>\r\n\r\n        <Grid item xs >\r\n          <Cards cardName={'County'} CardValue={sampleDetail.CountyName} />\r\n        </Grid>\r\n\r\n        <Grid item xs >\r\n          <Cards cardName={'Election Date'} CardValue={sampleDetail.ElectionDate.toString().substring(0, 10)} />\r\n        </Grid>\r\n        <Grid item xs >\r\n          <Cards cardName={'Contest Name'} CardValue={sampleDetail.ContestName} />\r\n        </Grid>\r\n        <Grid item xs >\r\n          <Cards cardName={'Type Of Sample'} CardValue={sampleDetail.TypeOfSample} />\r\n        </Grid>\r\n        <Grid item xs >\r\n          <Cards cardName={'Site Name'} CardValue={sampleDetail.PrecinctSiteName} />\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n      {/* <Grid container item spacing={10} justifyContent='center'>\r\n        <Grid item xs={12} spacing={10}>\r\n          <SimplePaper></SimplePaper>\r\n        </Grid>\r\n      </Grid> */}\r\n\r\n      {/* form starts here */}\r\n      <Grid container item spacing={0} justifyContent='center'>\r\n\r\n\r\n        <Box border={1} padding={2}>\r\n          <Grid container spacing={2} justifyContent='center'>\r\n            <Grid item xs={12} className={classes.bigTitle}>\r\n              Sample Audit Form\r\n            </Grid>\r\n\r\n            <Grid container item xs={12}>\r\n\r\n\r\n              <Grid item xs={6} style={{ border: \"1px solid grey\" }}>\r\n                <Typography className={classes.title}>Select date and time</Typography>\r\n                <DatePickers onDateChange={handleDateChange} onTimeChange={handleTimeChange}\r\n                  selectedDate={sampleDetail.DateOfCount} selectedTime={sampleDetail.TimeOfCount}\r\n                  formValidation={formValidation} />\r\n              </Grid>\r\n\r\n              <Grid item xs={6} className={classes.VotingEquipmentUsed} style={{ border: \"1px solid grey\" }}>\r\n                <FormControl error={formValidation.VotingEquipmentUsed}>\r\n                  <FormLabel ><Typography className={classes.title}>Voting equipment used for this sample</Typography></FormLabel>\r\n\r\n                  <CheckboxLabels\r\n                    onCheckBoxChange={handleCheckbox}\r\n                    list={sampleDetail.VotingEquipmentUsed}>\r\n                  </CheckboxLabels>\r\n\r\n                  <FormHelperText>{formValidation.VotingEquipmentUsed ? 'Required' : ''}</FormHelperText>\r\n                </FormControl>\r\n\r\n\r\n              </Grid>\r\n\r\n              <Grid container item xs={6} style={{ border: \"1px solid grey\" }} className={classes.cost} >\r\n                <Grid item>\r\n                  <Typography className={classes.title}>Time necessary to complete this count (not BOTH counts)</Typography>\r\n                </Grid>\r\n\r\n                <Grid item className={classes.costInput}>\r\n                  <TextField\r\n                    InputProps={{\r\n                      startAdornment: <InputAdornment position=\"start\">Hr</InputAdornment>,\r\n                      inputProps: { min: 0, max: 30 },\r\n                    }}\r\n                    //required\r\n                    type=\"number\"\r\n                    id=\"filled-required\"\r\n                    value={sampleDetail.TotalTime}\r\n\r\n\r\n                    //variant=\"filled\"\r\n                    onChange={handleHourInput}\r\n                    error={formValidation.TotalTime}\r\n                    helperText={formValidation.TotalTime ? 'Required' : ''}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container item xs={6} style={{ border: \"1px solid grey\" }} className={classes.cost} >\r\n                <Grid item className={classes.title}>\r\n                  <Typography className={classes.title}> Cost or estimated cost of this count (not BOTH counts)</Typography>\r\n                </Grid>\r\n\r\n                <Grid item className={classes.costInput}  >\r\n                  <TextField\r\n                    InputProps={{\r\n                      startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                      inputProps: { min: 0, max: 99999 },\r\n                    }}\r\n                    //required\r\n                    type=\"number\"\r\n                    id=\"filled-required\"\r\n\r\n                    value={sampleDetail.CostOfCount}\r\n\r\n                    //variant=\"filled\"\r\n                    onChange={handleCostInput}\r\n                    error={formValidation.CostOfCount}\r\n                    helperText={formValidation.CostOfCount ? 'Required' : ''}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n\r\n              <MaterialTable\r\n                title=\"Enter counts for each candidates\"\r\n                title={formValidation.CandidatesCounts ?\r\n                  <Typography className={classes.error}>Every candidate counts is required</Typography>\r\n                  : \"Enter counts for each candidates\"}\r\n                columns={columns}\r\n                data={candidateData}\r\n                icons={tableIcons}\r\n\r\n                options={{\r\n                  search: false,\r\n                  paging: false,\r\n                  sorting: false,\r\n                  actionsColumnIndex: -1,\r\n\r\n                }}\r\n\r\n                style={formValidation.CandidatesCounts && { border: '2px solid red' }}\r\n\r\n                editable={{\r\n                  onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\r\n\r\n                    setFormValidation({ ...formValidation, CandidatesCounts: false })\r\n                    //Backend call\r\n                    let canId = oldData.SampleCandidateId\r\n                    //let putbody = JSON.stringify(newData)\r\n\r\n                    let DifferenceInCount = Math.abs(parseInt(newData.Machine) - parseInt(newData.HandToEye))\r\n                    // DifferenceInCount == 0 ? setShowExplanation('none') : setShowExplanation('block');\r\n\r\n                    let putbody = {\r\n                      \"SampleCandidateId\": newData.SampleCandidateId,\r\n                      \"CandidateName\": newData.CandidateName,\r\n                      \"Machine\": newData.Machine,\r\n                      \"HandToEye\": newData.HandToEye,\r\n                      \"DifferenceInCount\": DifferenceInCount\r\n                    }\r\n                    console.log(putbody);\r\n                    //Promise.then() takes two arguments, a callback for success and another for failure.\r\n                    //Both are optional, so you can add a callback for success or failure only.\r\n                    // here response can be any word \r\n                    updateCandidate(newData, canId, putbody).then(response => {\r\n                      console.log(response)\r\n                      resolve()\r\n                    });\r\n\r\n                    // axios.put(`https://sampleaudit.ncsbe.gov/updateCandidate/${canId}`, putbody)\r\n                    // .then((response, rejct) => {\r\n                    //   let updateDate = candidateData\r\n                    //   let objIndex = updateDate.findIndex(( obj => obj.CandidateId == newData.CandidateId));     \r\n                    //   updateDate[objIndex].Machine = newData.Machine\r\n                    //   updateDate[objIndex].HandToEye = newData.HandToEye\r\n                    //   updateDate[objIndex].DifferenceInCount = newData.DifferenceInCount\r\n                    //   setCandidateData(updateDate)\r\n\r\n                    // resolve()\r\n\r\n                    // });\r\n                    // //why resolve here. will not wait for axios and we since it is a promise we need to excute the resolce. \r\n                    // or we can do somthing like resolve('done') but we don't know what material table is going to do with this resolve. \r\n\r\n                    // //resolve()\r\n                  }),\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid Container item xs={12} justifyContent='center' spacing={5}>\r\n              {/* <Collapse in={showExplanation} timeout={1500}>\r\n                <Fade in={showExplanation} timeout={500}> */}\r\n\r\n              <Collapse in={true} timeout={1000} justifyContent='center'>\r\n                <Fade in={true} timeout={1000} justifyContent='center'>\r\n\r\n                  <Grid container justifyContent='center'\r\n                    style={formValidation.DifferenceExplanation && { border: '2px solid red' }}>\r\n                    <Grid item className={classes.title}>\r\n                      <Typography className={classes.title}>Explanation of any difference (skip this section if there was no difference in any totals)</Typography>\r\n                      {/* error={formValidation.PeoplePartyCounting}\r\n                  helperText={formValidation.PeoplePartyCounting ? 'Required' : ' '} */}\r\n                    </Grid>\r\n\r\n\r\n                    <Grid container item xs={12} justifyContent='center' style={{ border: \"1px solid grey\" }} >\r\n                      <Grid item xs={8} className={classes.text} justifyContent='center'>\r\n                        <Typography className={classes.title}>If there is a difference, is it attributable to machine error or human error?</Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={4} justifyContent='center'>\r\n                        <RadioGroup row onChange={handleRadio}    value= {String(sampleDetail.HumanOrMachineError)}>\r\n\r\n                          <FormControlLabel value=\"Machine\" control={<Radio />} label=\"Machine error\" />\r\n                          <FormControlLabel value=\"Human\" control={<Radio />} label=\"Human error\" />\r\n                        </RadioGroup>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n\r\n\r\n                    <Grid item xs={12} className={classes.textBox}>\r\n\r\n                    <Grid item xs={12} className={classes.title}>\r\n                <Typography className={classes.title}>Detailed explanation of what caused the difference</Typography>\r\n\r\n              </Grid>\r\n                      <form noValidate autoComplete=\"on\">\r\n\r\n                        <TextField\r\n                          id=\"outlined-multiline-static\"\r\n                          // label=\"Detailed explanation of what caused the difference\"\r\n                          multiline\r\n                          rows={5}\r\n                          value = {sampleDetail.DifferenceExplanation}\r\n                          defaultValue= ''\r\n                          variant=\"outlined\"\r\n                          onChange={handleExplanation}\r\n                        />\r\n\r\n                      </form>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </Fade>\r\n              </Collapse>\r\n            </Grid>\r\n\r\n            <Grid Container item xs={12} justifyContent='center' spacing={5}>\r\n\r\n              <Grid item xs={12} className={classes.title}>\r\n                <Typography className={classes.title}>Who conducted the count (must consist of multiple persons of different party affiliation)</Typography>\r\n\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className={classes.textBox}>\r\n                <TextField\r\n\r\n                  id=\"outlined-multiline-static\"\r\n                  //label=\"Name, Party affiliation;\"\r\n                  multiline\r\n                  rows={5}\r\n                  //defaultValue={sampleDetail.PeoplePartyCounting}\r\n                  value={sampleDetail.PeoplePartyCounting}\r\n                  variant=\"outlined\"\r\n                  onChange={handlePeople}\r\n\r\n\r\n                  //className={classes.textField}\r\n                  error={formValidation.PeoplePartyCounting}\r\n                  helperText={formValidation.PeoplePartyCounting ? 'Required' : ' '}\r\n                />\r\n              </Grid>\r\n\r\n\r\n            </Grid>\r\n\r\n\r\n\r\n            {/* <Collapse in={hasError()} timeout={1500}>\r\n              <Fade in={hasError()} timeout={500}>\r\n                <Grid container item xs={12} justifyContent='center' >\r\n                  Please filled out required\r\n                </Grid>\r\n              </Fade>\r\n            </Collapse> */}\r\n\r\n            <Grid item spacing={12} justifyContent='center'>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleSubmit}\r\n                disabled={formInfoSubmitted}\r\n              >\r\n                {\r\n                  (formInfoSubmitted && 'Your form is submitted!')\r\n                  || (!formInfoSubmitted && 'Submit')\r\n\r\n                }\r\n              </Button>\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n        </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AuditForm;\r\n","import axios from \"axios\";\r\n\r\nexport const authenticateUser = async (email, password)=>{\r\n    let putbody = {\r\n      \"email\": email,\r\n      \"password\": password\r\n    }\r\n\r\n\r\n    const response = await axios.put(\r\n        `https://sampleaudit.ncsbe.gov/auth/check/${email}`, putbody\r\n      );\r\n\r\n      if (response.data === \"User not found\"){\r\n        return \"Email not in the system\"\r\n      }else{\r\n        let userData = await response.data;\r\n\r\n        return userData;\r\n\r\n      }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useState } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n\r\n\r\nimport { authenticateUser } from './api';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://www.ncsbe.gov/\">\r\n        NCSBE\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper2: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[1],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function LoginPage(props) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const history = useHistory();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const handleEmail = (e) => {\r\n    console.log(e.target.value)\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleLogin = async () => {\r\n    //get data through API and vrify login\r\n    if (!email) { alert(\"please enter email\") }\r\n    if (!password) { alert(\"please enter password\") }\r\n\r\n\r\n    // props.onUserAuthenticated({\r\n    //   IsDefault: \"False\",\r\n    //   CountyId: 1\r\n    // });\r\n    // history.push('/audit-form');\r\n    // return;\r\n\r\n    const userData = await authenticateUser(email, password);\r\n\r\n    if (userData === \"Email not in the system\") {\r\n      alert(userData)\r\n    }\r\n    else if (userData === \"login fail\") {\r\n      alert(\"Wrong Password\")\r\n    }\r\n    else {\r\n      //Successful login\r\n\r\n      \r\n      if (userData.IsDefault === 'True') {\r\n        props.onUserAuthenticated(\r\n          //webUserId: userData.WebUserId\r\n          userData\r\n        );\r\n\r\n\r\n\r\n        history.push('/change-password')\r\n      } else {\r\n        console.log(userData.CountyId)\r\n      \r\n        props.onUserAuthenticated(\r\n          //webUserId: userData.WebUserId\r\n          userData\r\n        );\r\n        history.push('/audit-form')\r\n      }\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nreturn (\r\n  <Container component=\"main\" maxWidth=\"xs\">\r\n    <CssBaseline />\r\n    <div className={classes.paper}>\r\n      <Avatar className={classes.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Sign in\r\n      </Typography>\r\n      <form className={classes.form} Validate>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          onChange={handleEmail}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n          onChange={handlePassword}\r\n        />\r\n \r\n        <Button\r\n          type=\"button\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          onClick={handleLogin}\r\n\r\n        >\r\n          Sign In\r\n        </Button>\r\n        <Grid container justifyContent=\"flex-end\">\r\n          <Grid item type=\"button\" onClick={handleOpen}>\r\n            <Link href=\"#\" variant=\"body2\">\r\n            Forgot password?\r\n            </Link>\r\n\r\n            {/* <button type=\"button\" onClick={handleOpen}>\r\n            Forgot password?\r\n            </button> */}\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </form>\r\n\r\n\r\n    </div>\r\n    <Modal\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        // closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper2}>\r\n            <h2 >Forget Password?</h2>\r\n            <p >Please send a help desk ticket to </p>\r\n            <p >HelpRequest.SBOE@ncbse.gov</p>\r\n            <p >to rest your password </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    <Box mt={8}>\r\n      <Copyright />\r\n    </Box>\r\n  </Container>\r\n);\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"axios\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://www.ncsbe.gov/\">\r\n        NCSBE\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nconst updatePassword = async (webUserId, password) => {\r\n  \r\n  let putbody = {\r\n    \"WebUserId\": webUserId,\r\n    \"UserPassword\": password\r\n  }\r\n  //console.log('updatFunction', putbody);\r\n  const res = await axios.put(`https://sampleaudit.ncsbe.gov/auth/updateWebUser`, putbody);\r\n}\r\n\r\n\r\n\r\nexport default function ChargePassword(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [newPassword, setNewPassword] = useState();\r\n  const [confirmPassword, setConfirmPassword] = useState();\r\n  const [webUserId, setWebUserId] = useState();\r\n\r\n  //setWebUserId(props.userData.WebUserId)\r\n\r\n  const handleNew = (e) => {\r\n    setNewPassword(e.target.value)\r\n  }\r\n\r\n  const handleConfirm = (e) => {\r\n    setConfirmPassword(e.target.value)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setWebUserId(props.userData.WebUserId)\r\n\r\n  }, []);\r\n\r\n\r\n  const handleChangePassword = () => {\r\n    //ev.preventDefault()\r\n    if (newPassword === confirmPassword) {\r\n      //props.onPasswordChanged();\r\n      //console.log(props.userData.WebUserId) \r\n      updatePassword(webUserId, newPassword)\r\n\r\n      history.push('/login');\r\n    } else {\r\n      alert(\"Passwords don't match\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Change Password\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"New Password\"\r\n            label=\"New Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleNew}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"Confirm Password\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleConfirm}\r\n          />\r\n\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleChangePassword}\r\n          >\r\n            Change Password\r\n          </Button>\r\n\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from \"react\";\r\nimport { useState } from \"react\";\r\n//BrowserRouter as Router,\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n\r\n} from \"react-router-dom\";\r\n\r\nimport \"./styles.css\";\r\nimport AuditForm from \"./AuditForm\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport Cookies from 'js-cookie';\r\nimport { clearCookiesInterval, setLoginCookies } from './loginCookies';\r\n \r\nfunction initUserData (){\r\n  const userDataCookies = Cookies.get('userData')\r\n  return userDataCookies === undefined ? {} : JSON.parse(userDataCookies)\r\n}\r\n\r\nfunction Logout(props) {\r\n  const history = useHistory();\r\n  props.onLogout();\r\n  history.replace('/login');\r\n  return null;\r\n}\r\n\r\nconst App = () => {\r\n  const [userData, setUserData] = useState(initUserData());\r\n\r\n  console.log('user data',userData)\r\n\r\n  const handleUserAuthenticated =(userData)=>{\r\n    // console.log(userData);\r\n    setUserData(userData);\r\n    setLoginCookies(userData);\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    clearCookiesInterval();\r\n    setUserData({});\r\n    Cookies.remove('userData');\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            {/* <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li> */}\r\n            <li>\r\n              {userData.IsDefault === \"False\" && <Link to=\"/audit-form\">Audit Form</Link> }\r\n            </li>\r\n            <li>\r\n              {userData.IsDefault === \"False\"? <Link to=\"/logout\">Logout</Link>:<Link to=\"/login\">Login</Link>}\r\n            </li>\r\n            <li>\r\n            <a href='https://sampleaudit.ncsbe.gov/files/User-Manual.docx' download>User-Manual</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n         \r\n        <Switch>\r\n          <Route exact path=\"/login\">\r\n            <LoginPage onUserAuthenticated = {handleUserAuthenticated} />\r\n          </Route>\r\n          <Route exact path=\"/logout\">\r\n            <Logout onLogout={handleLogout} />\r\n          </Route>\r\n          <Route path=\"/change-password\">\r\n            <ChangePassword userData = {userData}/>\r\n          </Route>\r\n          <Route exact path={\"/audit-form\"}  >\r\n            <AuditForm userData = {userData}/>\r\n          </Route>\r\n          <Route path= \"/\">\r\n            <LoginPage onUserAuthenticated = {handleUserAuthenticated} />\r\n          </Route>\r\n        </Switch>\r\n     \r\n       \r\n\r\n      </div>\r\n      </Router>\r\n\r\n      \r\n    \r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from 'react-router-dom'\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n      <HashRouter>\n      <App />\n      </HashRouter>\n,\n  rootElement\n);"],"sourceRoot":""}